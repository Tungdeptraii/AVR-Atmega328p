
AVRASM ver. 2.1.30  D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm Tue May 14 11:49:52 2024

D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1421): warning: Register r3 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1422): warning: Register r4 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1423): warning: Register r5 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1424): warning: Register r6 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1425): warning: Register r7 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1426): warning: Register r8 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1427): warning: Register r10 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1428): warning: Register r11 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1429): warning: Register r12 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1430): warning: Register r13 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\code\Debug\List\code.asm(1431): warning: Register r14 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.01 Evaluation
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TWI_Rx_Index=R3
                 	.DEF _TWI_Rx_Index_msb=R4
                 	.DEF _TWI_Tx_Index=R5
                 	.DEF _TWI_Tx_Index_msb=R6
                 	.DEF _TWI_Data_In=R7
                 	.DEF _TWI_Data_In_msb=R8
                 	.DEF _Status_Code=R10
                 	.DEF _i=R11
                 	.DEF _i_msb=R12
                 	.DEF _UART_Rx_Index=R13
                 	.DEF _UART_Rx_Index_msb=R14
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00de 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 02a5 	JMP  _usart_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 02c9 	JMP  _TWI_isr
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000
000035 0000      	.DB  0x0,0x0,0x0,0x0
000036 0000
000037 0000      	.DB  0x0,0x0,0x0,0x0
000038 0000
000039 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
00003a 7453
00003b 7261
00003c 2074
00003d 6573      	.DB  0x53,0x74,0x61,0x72,0x74,0x20,0x73,0x65
00003e 746e
00003f 2e2e
000040 0a2e
000041 5300      	.DB  0x6E,0x74,0x2E,0x2E,0x2E,0xA,0x0,0x53
000042 6174
000043 7574
000044 2073
000045 6f43      	.DB  0x74,0x61,0x74,0x75,0x73,0x20,0x43,0x6F
000046 6564
000047 203a
000048 5300
000049 414c      	.DB  0x64,0x65,0x3A,0x20,0x0,0x53,0x4C,0x41
00004a 2b20
00004b 7220
00004c 2077
00004d 6573      	.DB  0x20,0x2B,0x20,0x72,0x77,0x20,0x73,0x65
00004e 746e
00004f 2e20
000050 2e2e
000051 000a      	.DB  0x6E,0x74,0x20,0x2E,0x2E,0x2E,0xA,0x0
000052 7942
000053 6574
000054 7320
000055 6e65      	.DB  0x42,0x79,0x74,0x65,0x20,0x73,0x65,0x6E
000056 2e74
000057 2e2e
000058 000a
000059 774f      	.DB  0x74,0x2E,0x2E,0x2E,0xA,0x0,0x4F,0x77
00005a 206e
00005b 6461
00005c 7264
00005d 7365      	.DB  0x6E,0x20,0x61,0x64,0x64,0x72,0x65,0x73
00005e 2073
00005f 616d
000060 6374
000061 2068      	.DB  0x73,0x20,0x6D,0x61,0x74,0x63,0x68,0x20
000062 202b
000063 2057
000064 000a
000065 6552      	.DB  0x2B,0x20,0x57,0x20,0xA,0x0,0x52,0x65
000066 6563
000067 7669
000068 2065
000069 2061      	.DB  0x63,0x65,0x69,0x76,0x65,0x20,0x61,0x20
00006a 7962
00006b 6574
00006c 202c
00006d 6573      	.DB  0x62,0x79,0x74,0x65,0x2C,0x20,0x73,0x65
00006e 746e
00006f 4120
000070 4b43
000071 0a20      	.DB  0x6E,0x74,0x20,0x41,0x43,0x4B,0x20,0xA
000072 5200
000073 6365
000074 6965
000075 6576      	.DB  0x0,0x52,0x65,0x63,0x65,0x69,0x76,0x65
000076 6120
000077 6220
000078 7479
000079 2c65      	.DB  0x20,0x61,0x20,0x62,0x79,0x74,0x65,0x2C
00007a 7320
00007b 6e65
00007c 2074
00007d 414e      	.DB  0x20,0x73,0x65,0x6E,0x74,0x20,0x4E,0x41
00007e 4b43
00007f 0a20
000080 5200
000081 6365      	.DB  0x43,0x4B,0x20,0xA,0x0,0x52,0x65,0x63
000082 6965
000083 6576
000084 5320
000085 6f74      	.DB  0x65,0x69,0x76,0x65,0x20,0x53,0x74,0x6F
000086 2070
000087 6f63
000088 646e
000089 7469      	.DB  0x70,0x20,0x63,0x6F,0x6E,0x64,0x69,0x74
00008a 6f69
00008b 206e
00008c 000a
00008d 6144      	.DB  0x69,0x6F,0x6E,0x20,0xA,0x0,0x44,0x61
00008e 6174
00008f 7220
000090 6365
000091 6965      	.DB  0x74,0x61,0x20,0x72,0x65,0x63,0x65,0x69
000092 6576
000093 2064
000094 7266
000095 6d6f      	.DB  0x76,0x65,0x64,0x20,0x66,0x72,0x6F,0x6D
000096 5520
000097 5241
000098 2054
000099 203a      	.DB  0x20,0x55,0x41,0x52,0x54,0x20,0x3A,0x20
00009a 4400
00009b 7461
00009c 2061
00009d 6572      	.DB  0x0,0x44,0x61,0x74,0x61,0x20,0x72,0x65
00009e 6563
00009f 7669
0000a0 6465
0000a1 6620      	.DB  0x63,0x65,0x69,0x76,0x65,0x64,0x20,0x66
0000a2 6f72
0000a3 206d
0000a4 5754
0000a5 3a49      	.DB  0x72,0x6F,0x6D,0x20,0x54,0x57,0x49,0x3A
0000a6 0020      	.DB  0x20,0x0
                 
                 __GLOBAL_INI_TBL:
0000a7 000c      	.DW  0x0C
0000a8 0003      	.DW  0x03
0000a9 0068      	.DW  __REG_VARS*2
                 
0000aa 000f      	.DW  0x0F
0000ab 0300      	.DW  _0x13
0000ac 0074      	.DW  _0x0*2
                 
0000ad 000e      	.DW  0x0E
0000ae 030f      	.DW  _0x13+15
0000af 0083      	.DW  _0x0*2+15
                 
0000b0 0002      	.DW  0x02
0000b1 031d      	.DW  _0x13+29
0000b2 0081      	.DW  _0x0*2+13
                 
0000b3 0013      	.DW  0x13
0000b4 031f      	.DW  _0x17
0000b5 0091      	.DW  _0x0*2+29
                 
0000b6 000e      	.DW  0x0E
0000b7 0332      	.DW  _0x17+19
0000b8 0083      	.DW  _0x0*2+15
                 
0000b9 0002      	.DW  0x02
0000ba 0340      	.DW  _0x17+33
0000bb 0081      	.DW  _0x0*2+13
                 
0000bc 000e      	.DW  0x0E
0000bd 0342      	.DW  _0x1B
0000be 00a4      	.DW  _0x0*2+48
                 
0000bf 000e      	.DW  0x0E
0000c0 0350      	.DW  _0x1B+14
0000c1 0083      	.DW  _0x0*2+15
                 
0000c2 0002      	.DW  0x02
0000c3 035e      	.DW  _0x1B+28
0000c4 0081      	.DW  _0x0*2+13
                 
0000c5 0018      	.DW  0x18
0000c6 0360      	.DW  _0x34
0000c7 00b2      	.DW  _0x0*2+62
                 
0000c8 001b      	.DW  0x1B
0000c9 0378      	.DW  _0x34+24
0000ca 00ca      	.DW  _0x0*2+86
                 
0000cb 001c      	.DW  0x1C
0000cc 0393      	.DW  _0x34+51
0000cd 00e5      	.DW  _0x0*2+113
                 
0000ce 0019      	.DW  0x19
0000cf 03af      	.DW  _0x34+79
0000d0 0101      	.DW  _0x0*2+141
                 
0000d1 001b      	.DW  0x1B
0000d2 03c8      	.DW  _0x4E
0000d3 011a      	.DW  _0x0*2+166
                 
0000d4 0002      	.DW  0x02
0000d5 03e3      	.DW  _0x4E+27
0000d6 0081      	.DW  _0x0*2+13
                 
0000d7 0019      	.DW  0x19
0000d8 03e5      	.DW  _0x4E+29
0000d9 0135      	.DW  _0x0*2+193
                 
0000da 0002      	.DW  0x02
0000db 03fe      	.DW  _0x4E+54
0000dc 0081      	.DW  _0x0*2+13
                 
                 _0xFFFFFFFF:
0000dd 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000de 94f8      	CLI
                 
0000df 27ee      	CLR  R30
0000e0 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000e1 e0f1      	LDI  R31,1
0000e2 bff5      	OUT  MCUCR,R31
0000e3 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000e4 e08d      	LDI  R24,(14-2)+1
0000e5 e0a2      	LDI  R26,2
0000e6 27bb      	CLR  R27
                 __CLEAR_REG:
0000e7 93ed      	ST   X+,R30
0000e8 958a      	DEC  R24
0000e9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000ea e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000eb e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ec e0a0      	LDI  R26,LOW(__SRAM_START)
0000ed e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000ee 93ed      	ST   X+,R30
0000ef 9701      	SBIW R24,1
0000f0 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000f1 e4ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000f2 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000f3 9185      	LPM  R24,Z+
0000f4 9195      	LPM  R25,Z+
0000f5 9700      	SBIW R24,0
0000f6 f061      	BREQ __GLOBAL_INI_END
0000f7 91a5      	LPM  R26,Z+
0000f8 91b5      	LPM  R27,Z+
0000f9 9005      	LPM  R0,Z+
0000fa 9015      	LPM  R1,Z+
0000fb 01bf      	MOVW R22,R30
0000fc 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000fd 9005      	LPM  R0,Z+
0000fe 920d      	ST   X+,R0
0000ff 9701      	SBIW R24,1
000100 f7e1      	BRNE __GLOBAL_INI_LOOP
000101 01fb      	MOVW R30,R22
000102 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000103 e0e0      	LDI  R30,__GPIOR0_INIT
000104 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000105 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000106 bfed      	OUT  SPL,R30
000107 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000108 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000109 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00010a e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00010b 940c 02e5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _uart_init:
                 ; .FSTART _uart_init
00010d 93ba      	ST   -Y,R27
00010e 93aa      	ST   -Y,R26
00010f 931a      	ST   -Y,R17
000110 930a      	ST   -Y,R16
                 ;	BAUDRATE -> Y+2
                 ;	n -> R16,R17
000111 81ea      	LDD  R30,Y+2
000112 81fb      	LDD  R31,Y+2+1
000113 2766      	CLR  R22
000114 2777      	CLR  R23
000115 d22e      	RCALL SUBOPT_0x0
000116 01df      	MOVW R26,R30
000117 01cb      	MOVW R24,R22
                +
000118 e1e0     +LDI R30 , LOW ( 0x10 )
000119 e0f0     +LDI R31 , HIGH ( 0x10 )
00011a e060     +LDI R22 , BYTE3 ( 0x10 )
00011b e070     +LDI R23 , BYTE4 ( 0x10 )
                 	__GETD1N 0x10
00011c d2d1      	RCALL __DIVD21
00011d 9731      	SBIW R30,1
00011e 018f      	MOVW R16,R30
00011f 9310 00c5 	STS  197,R17
000121 9300 00c4 	STS  196,R16
000123 e0e6      	LDI  R30,LOW(6)
000124 93e0 00c2 	STS  194,R30
000126 e9e8      	LDI  R30,LOW(152)
000127 93e0 00c1 	STS  193,R30
000129 9478      	SEI
00012a 8119      	LDD  R17,Y+1
00012b 8108      	LDD  R16,Y+0
00012c 9624      	ADIW R28,4
00012d 9508      	RET
                 ; .FEND
                 _uart_putchar:
                 ; .FSTART _uart_putchar
00012e 931a      	ST   -Y,R17
00012f 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x3:
000130 91e0 00c0 	LDS  R30,192
000132 72e0      	ANDI R30,LOW(0x20)
000133 f3e1      	BREQ _0x3
000134 9310 00c6 	STS  198,R17
000136 c0bc      	RJMP _0x2000004
                 ; .FEND
                 _uart_putstring:
                 ; .FSTART _uart_putstring
000137 931a      	ST   -Y,R17
000138 930a      	ST   -Y,R16
000139 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x6:
00013a 01d8      	MOVW R26,R16
00013b 91ec      	LD   R30,X
00013c 30e0      	CPI  R30,0
00013d f059      	BREQ _0x8
00013e 91ac      	LD   R26,X
00013f dfee      	RCALL _uart_putchar
000140 01d8      	MOVW R26,R16
000141 91ac      	LD   R26,X
000142 30aa      	CPI  R26,LOW(0xA)
000143 f411      	BRNE _0x9
000144 e0ad      	LDI  R26,LOW(13)
000145 dfe8      	RCALL _uart_putchar
                 _0x9:
                +
000146 5f0f     +SUBI R16 , LOW ( - 1 )
000147 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000148 cff1      	RJMP _0x6
                 _0x8:
000149 9109      	LD   R16,Y+
00014a 9119      	LD   R17,Y+
00014b 9508      	RET
                 ; .FEND
                 _uart_put_int:
                 ; .FSTART _uart_put_int
00014c 93ba      	ST   -Y,R27
00014d 93aa      	ST   -Y,R26
00014e 9728      	SBIW R28,8
00014f d238      	RCALL __SAVELOCR6
                 ;	value -> Y+14
                 ;	buf -> Y+6
                 ;	index -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
000150 e000     +LDI R16 , LOW ( 0 )
000151 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000152 854e     +LDD R20 , Y + 14
000153 855f     +LDD R21 , Y + 14 + 1
                 	__GETWRS 20,21,14
                 _0xB:
000154 01f8      	MOVW R30,R16
000155 01de      	MOVW R26,R28
000156 9616      	ADIW R26,6
000157 0fea      	ADD  R30,R26
000158 1ffb      	ADC  R31,R27
000159 01bf      	MOVW R22,R30
00015a 01da      	MOVW R26,R20
00015b e0ea      	LDI  R30,LOW(10)
00015c e0f0      	LDI  R31,HIGH(10)
00015d d295      	RCALL __MODW21
00015e 5de0      	SUBI R30,-LOW(48)
00015f 01db      	MOVW R26,R22
000160 93ec      	ST   X,R30
000161 01da      	MOVW R26,R20
000162 e0ea      	LDI  R30,LOW(10)
000163 e0f0      	LDI  R31,HIGH(10)
000164 d260      	RCALL __DIVW21
000165 01af      	MOVW R20,R30
                +
000166 5f0f     +SUBI R16 , LOW ( - 1 )
000167 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000168 2e04      	MOV  R0,R20
000169 2a05      	OR   R0,R21
00016a f749      	BRNE _0xB
00016b 0198      	MOVW R18,R16
                 _0xE:
00016c 2400      	CLR  R0
00016d 1602      	CP   R0,R18
00016e 0603      	CPC  R0,R19
00016f f45c      	BRGE _0xF
000170 01f9      	MOVW R30,R18
000171 9731      	SBIW R30,1
000172 01de      	MOVW R26,R28
000173 9616      	ADIW R26,6
000174 0fae      	ADD  R26,R30
000175 1fbf      	ADC  R27,R31
000176 91ac      	LD   R26,X
000177 dfb6      	RCALL _uart_putchar
                +
000178 5021     +SUBI R18 , LOW ( 1 )
000179 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
00017a cff1      	RJMP _0xE
                 _0xF:
00017b d213      	RCALL __LOADLOCR6
00017c 9660      	ADIW R28,16
00017d 9508      	RET
                 ; .FEND
                 _TWI_Init:
                 ; .FSTART _TWI_Init
00017e d20b      	RCALL __SAVELOCR4
00017f 2f1a      	MOV  R17,R26
000180 810c      	LDD  R16,Y+4
000181 813d      	LDD  R19,Y+5
                 ;	sla -> R19
                 ;	gcall -> R16
                 ;	sclock -> R17
000182 2fe3      	MOV  R30,R19
000183 0fee      	LSL  R30
000184 0fe0      	ADD  R30,R16
000185 93e0 00ba 	STS  186,R30
000187 91e0 00b9 	LDS  R30,185
000189 7fec      	ANDI R30,LOW(0xFC)
00018a 93e0 00b9 	STS  185,R30
00018c 2fe1      	MOV  R30,R17
00018d e0f0      	LDI  R31,0
                +
00018e 2f6f     +MOV R22 , R31
00018f 0f66     +ADD R22 , R22
000190 0b66     +SBC R22 , R22
000191 2f76     +MOV R23 , R22
                 	__CWD1
000192 d1b1      	RCALL SUBOPT_0x0
                +
000193 51e0     +SUBI R30 , LOW ( 16 )
000194 40f0     +SBCI R31 , HIGH ( 16 )
000195 4060     +SBCI R22 , BYTE3 ( 16 )
000196 4070     +SBCI R23 , BYTE4 ( 16 )
                 	__SUBD1N 16
000197 01df      	MOVW R26,R30
000198 01cb      	MOVW R24,R22
                +
000199 e0e2     +LDI R30 , LOW ( 0x2 )
00019a e0f0     +LDI R31 , HIGH ( 0x2 )
00019b e060     +LDI R22 , BYTE3 ( 0x2 )
00019c e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00019d d250      	RCALL __DIVD21
00019e 93e0 00b8 	STS  184,R30
0001a0 e4e5      	LDI  R30,LOW(69)
0001a1 93e0 00bc 	STS  188,R30
0001a3 c067      	RJMP _0x2000003
                 ; .FEND
                 _TWI_Interupt_Enable:
                 ; .FSTART _TWI_Interupt_Enable
0001a4 91e0 00bc 	LDS  R30,188
0001a6 64e1      	ORI  R30,LOW(0x41)
0001a7 c016      	RJMP _0x2000005
                 ; .FEND
                 _TWI_Interupt_Disable:
                 ; .FSTART _TWI_Interupt_Disable
0001a8 91e0 00bc 	LDS  R30,188
0001aa 7fee      	ANDI R30,0xFE
0001ab c012      	RJMP _0x2000005
                 ; .FEND
                 _TWI_Start:
                 ; .FSTART _TWI_Start
0001ac eae4      	LDI  R30,LOW(164)
0001ad 93e0 00bc 	STS  188,R30
                 _0x10:
0001af 91e0 00bc 	LDS  R30,188
0001b1 78e0      	ANDI R30,LOW(0x80)
0001b2 f3e1      	BREQ _0x10
                +
0001b3 e0a0     +LDI R26 , LOW ( _0x13 + ( 0 ) )
0001b4 e0b3     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
0001b5 df81      	RCALL _uart_putstring
                +
0001b6 e0af     +LDI R26 , LOW ( _0x13 + ( 15 ) )
0001b7 e0b3     +LDI R27 , HIGH ( _0x13 + ( 15 ) )
                 	__POINTW2MN _0x13,15
0001b8 d191      	RCALL SUBOPT_0x1
                +
0001b9 e1ad     +LDI R26 , LOW ( _0x13 + ( 29 ) )
0001ba e0b3     +LDI R27 , HIGH ( _0x13 + ( 29 ) )
                 	__POINTW2MN _0x13,29
0001bb d196      	RCALL SUBOPT_0x2
0001bc 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x13:
000300           	.BYTE 0x1F
                 
                 	.CSEG
                 _TWI_Stop:
                 ; .FSTART _TWI_Stop
0001bd e9e4      	LDI  R30,LOW(148)
                 _0x2000005:
0001be 93e0 00bc 	STS  188,R30
0001c0 9508      	RET
                 ; .FEND
                 _TWI_SLA_RW:
                 ; .FSTART _TWI_SLA_RW
0001c1 931a      	ST   -Y,R17
0001c2 930a      	ST   -Y,R16
0001c3 2f1a      	MOV  R17,R26
0001c4 810a      	LDD  R16,Y+2
                 ;	add -> R16
                 ;	rw -> R17
0001c5 2fe1      	MOV  R30,R17
0001c6 5fef      	SUBI R30,-LOW(1)
0001c7 2fa0      	MOV  R26,R16
0001c8 d1e1      	RCALL __LSLB12
0001c9 93e0 00bb 	STS  187,R30
0001cb e8e4      	LDI  R30,LOW(132)
0001cc 93e0 00bc 	STS  188,R30
                 _0x14:
0001ce 91e0 00bc 	LDS  R30,188
0001d0 78e0      	ANDI R30,LOW(0x80)
0001d1 f3e1      	BREQ _0x14
                +
0001d2 e1af     +LDI R26 , LOW ( _0x17 + ( 0 ) )
0001d3 e0b3     +LDI R27 , HIGH ( _0x17 + ( 0 ) )
                 	__POINTW2MN _0x17,0
0001d4 df62      	RCALL _uart_putstring
                +
0001d5 e3a2     +LDI R26 , LOW ( _0x17 + ( 19 ) )
0001d6 e0b3     +LDI R27 , HIGH ( _0x17 + ( 19 ) )
                 	__POINTW2MN _0x17,19
0001d7 d172      	RCALL SUBOPT_0x1
                +
0001d8 e4a0     +LDI R26 , LOW ( _0x17 + ( 33 ) )
0001d9 e0b3     +LDI R27 , HIGH ( _0x17 + ( 33 ) )
                 	__POINTW2MN _0x17,33
0001da d177      	RCALL SUBOPT_0x2
0001db 8119      	LDD  R17,Y+1
0001dc 8108      	LDD  R16,Y+0
0001dd 9623      	ADIW R28,3
0001de 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x17:
00031f           	.BYTE 0x23
                 
                 	.CSEG
                 _TWI_Send_Byte:
                 ; .FSTART _TWI_Send_Byte
0001df 931a      	ST   -Y,R17
0001e0 2f1a      	MOV  R17,R26
                 ;	b -> R17
0001e1 9310 00bb 	STS  187,R17
0001e3 e8e4      	LDI  R30,LOW(132)
0001e4 93e0 00bc 	STS  188,R30
                 _0x18:
0001e6 91e0 00bc 	LDS  R30,188
0001e8 78e0      	ANDI R30,LOW(0x80)
0001e9 f3e1      	BREQ _0x18
                +
0001ea e4a2     +LDI R26 , LOW ( _0x1B + ( 0 ) )
0001eb e0b3     +LDI R27 , HIGH ( _0x1B + ( 0 ) )
                 	__POINTW2MN _0x1B,0
0001ec df4a      	RCALL _uart_putstring
                +
0001ed e5a0     +LDI R26 , LOW ( _0x1B + ( 14 ) )
0001ee e0b3     +LDI R27 , HIGH ( _0x1B + ( 14 ) )
                 	__POINTW2MN _0x1B,14
0001ef d15a      	RCALL SUBOPT_0x1
                +
0001f0 e5ae     +LDI R26 , LOW ( _0x1B + ( 28 ) )
0001f1 e0b3     +LDI R27 , HIGH ( _0x1B + ( 28 ) )
                 	__POINTW2MN _0x1B,28
0001f2 d15f      	RCALL SUBOPT_0x2
                 _0x2000004:
0001f3 9119      	LD   R17,Y+
0001f4 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x1B:
000342           	.BYTE 0x1E
                 
                 	.CSEG
                 _TWI_Send_Array:
                 ; .FSTART _TWI_Send_Array
0001f5 d194      	RCALL __SAVELOCR4
0001f6 018d      	MOVW R16,R26
                +
0001f7 812c     +LDD R18 , Y + 4
0001f8 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
0001f9 24bb      	CLR  R11
0001fa 24cc      	CLR  R12
                 _0x1D:
                +
0001fb 16b0     +CP R11 , R16
0001fc 06c1     +CPC R12 , R17
                 	__CPWRR 11,12,16,17
0001fd f454      	BRGE _0x1E
                +
0001fe 2deb     +MOV R30 , R11
0001ff 2dfc     +MOV R31 , R12
                 	__GETW1R 11,12
000200 0fe2      	ADD  R30,R18
000201 1ff3      	ADC  R31,R19
000202 81a0      	LD   R26,Z
000203 dfdb      	RCALL _TWI_Send_Byte
000204 32e8      	CPI  R30,LOW(0x28)
000205 f411      	BRNE _0x2000002
000206 d150      	RCALL SUBOPT_0x3
000207 cff3      	RJMP _0x1D
                 _0x1E:
                 _0x2000002:
000208 91e0 00b9 	LDS  R30,185
00020a 7fe8      	ANDI R30,LOW(0xF8)
                 _0x2000003:
00020b d185      	RCALL __LOADLOCR4
00020c 9626      	ADIW R28,6
00020d 9508      	RET
                 ; .FEND
                 _TWI_Error:
                 ; .FSTART _TWI_Error
00020e dfae      	RCALL _TWI_Stop
00020f df94      	RCALL _TWI_Interupt_Enable
000210 9508      	RET
                 ; .FEND
                 _TWI_Master_Send:
                 ; .FSTART _TWI_Master_Send
000211 d176      	RCALL __SAVELOCR6
000212 018d      	MOVW R16,R26
                +
000213 812e     +LDD R18 , Y + 6
000214 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
000215 8558      	LDD  R21,Y+8
                 ;	sla -> R21
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
000216 df91      	RCALL _TWI_Interupt_Disable
000217 df94      	RCALL _TWI_Start
000218 30e8      	CPI  R30,LOW(0x8)
000219 f011      	BREQ _0x20
00021a e0e1      	LDI  R30,LOW(1)
00021b c012      	RJMP _0x2000001
                 _0x20:
00021c 935a      	ST   -Y,R21
00021d e0a0      	LDI  R26,LOW(0)
00021e dfa2      	RCALL _TWI_SLA_RW
00021f 31e8      	CPI  R30,LOW(0x18)
000220 f011      	BREQ _0x21
000221 e0e1      	LDI  R30,LOW(1)
000222 c00b      	RJMP _0x2000001
                 _0x21:
000223 933a      	ST   -Y,R19
000224 932a      	ST   -Y,R18
000225 01d8      	MOVW R26,R16
000226 dfce      	RCALL _TWI_Send_Array
000227 32e8      	CPI  R30,LOW(0x28)
000228 f011      	BREQ _0x22
000229 e0e1      	LDI  R30,LOW(1)
00022a c003      	RJMP _0x2000001
                 _0x22:
00022b df91      	RCALL _TWI_Stop
00022c df77      	RCALL _TWI_Interupt_Enable
00022d e0e0      	LDI  R30,LOW(0)
                 _0x2000001:
00022e d160      	RCALL __LOADLOCR6
00022f 9629      	ADIW R28,9
000230 9508      	RET
                 ; .FEND
                 ;	sla -> R21
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
                 _TWI_Slave_Int:
                 ; .FSTART _TWI_Slave_Int
000231 91e0 00b9 	LDS  R30,185
000233 7fe8      	ANDI R30,LOW(0xF8)
000234 2eae      	MOV  R10,R30
000235 e0f0      	LDI  R31,0
000236 36e0      	CPI  R30,LOW(0x60)
000237 e0a0      	LDI  R26,HIGH(0x60)
000238 07fa      	CPC  R31,R26
000239 f431      	BRNE _0x33
                +
00023a e6a0     +LDI R26 , LOW ( _0x34 + ( 0 ) )
00023b e0b3     +LDI R27 , HIGH ( _0x34 + ( 0 ) )
                 	__POINTW2MN _0x34,0
00023c defa      	RCALL _uart_putstring
00023d 2433      	CLR  R3
00023e 2444      	CLR  R4
00023f c05f      	RJMP _0x58
                 _0x33:
000240 38e0      	CPI  R30,LOW(0x80)
000241 e0a0      	LDI  R26,HIGH(0x80)
000242 07fa      	CPC  R31,R26
000243 f449      	BRNE _0x35
                +
000244 e7a8     +LDI R26 , LOW ( _0x34 + ( 24 ) )
000245 e0b3     +LDI R27 , HIGH ( _0x34 + ( 24 ) )
                 	__POINTW2MN _0x34,24
000246 def0      	RCALL _uart_putstring
000247 d114      	RCALL SUBOPT_0x4
000248 f414      	BRGE _0x36
000249 d117      	RCALL SUBOPT_0x5
00024a c054      	RJMP _0x58
                 _0x36:
00024b d122      	RCALL SUBOPT_0x6
00024c c055      	RJMP _0x59
                 _0x35:
00024d 38e8      	CPI  R30,LOW(0x88)
00024e e0a0      	LDI  R26,HIGH(0x88)
00024f 07fa      	CPC  R31,R26
000250 f409      	BRNE _0x39
000251 c04d      	RJMP _0x58
                 _0x39:
000252 37e0      	CPI  R30,LOW(0x70)
000253 e0a0      	LDI  R26,HIGH(0x70)
000254 07fa      	CPC  R31,R26
000255 f419      	BRNE _0x3A
000256 2433      	CLR  R3
000257 2444      	CLR  R4
000258 c046      	RJMP _0x58
                 _0x3A:
000259 39e0      	CPI  R30,LOW(0x90)
00025a e0a0      	LDI  R26,HIGH(0x90)
00025b 07fa      	CPC  R31,R26
00025c f431      	BRNE _0x3B
00025d d0fe      	RCALL SUBOPT_0x4
00025e f414      	BRGE _0x3C
00025f d101      	RCALL SUBOPT_0x5
000260 c03e      	RJMP _0x58
                 _0x3C:
000261 d10c      	RCALL SUBOPT_0x6
000262 c03f      	RJMP _0x59
                 _0x3B:
000263 39e8      	CPI  R30,LOW(0x98)
000264 e0a0      	LDI  R26,HIGH(0x98)
000265 07fa      	CPC  R31,R26
000266 f421      	BRNE _0x3F
                +
000267 e9a3     +LDI R26 , LOW ( _0x34 + ( 51 ) )
000268 e0b3     +LDI R27 , HIGH ( _0x34 + ( 51 ) )
                 	__POINTW2MN _0x34,51
000269 decd      	RCALL _uart_putstring
00026a c034      	RJMP _0x58
                 _0x3F:
00026b 3ae0      	CPI  R30,LOW(0xA0)
00026c e0a0      	LDI  R26,HIGH(0xA0)
00026d 07fa      	CPC  R31,R26
00026e f441      	BRNE _0x40
                +
00026f eaaf     +LDI R26 , LOW ( _0x34 + ( 79 ) )
000270 e0b3     +LDI R27 , HIGH ( _0x34 + ( 79 ) )
                 	__POINTW2MN _0x34,79
000271 dec5      	RCALL _uart_putstring
000272 e0e1      	LDI  R30,LOW(1)
000273 e0f0      	LDI  R31,HIGH(1)
                +
000274 2e7e     +MOV R7 , R30
000275 2e8f     +MOV R8 , R31
                 	__PUTW1R 7,8
000276 c028      	RJMP _0x58
                 _0x40:
000277 3ae8      	CPI  R30,LOW(0xA8)
000278 e0a0      	LDI  R26,HIGH(0xA8)
000279 07fa      	CPC  R31,R26
00027a f411      	BRNE _0x41
00027b d0fb      	RCALL SUBOPT_0x7
00027c c022      	RJMP _0x58
                 _0x41:
00027d 3be8      	CPI  R30,LOW(0xB8)
00027e e0a0      	LDI  R26,HIGH(0xB8)
00027f 07fa      	CPC  R31,R26
000280 f481      	BRNE _0x42
000281 e3e1      	LDI  R30,LOW(49)
000282 e0f0      	LDI  R31,HIGH(49)
000283 165e      	CP   R5,R30
000284 066f      	CPC  R6,R31
000285 f414      	BRGE _0x43
000286 d0f0      	RCALL SUBOPT_0x7
000287 c017      	RJMP _0x58
                 _0x43:
000288 e3a2      	LDI  R26,LOW(_TWI_Tx_Buf)
000289 e0b4      	LDI  R27,HIGH(_TWI_Tx_Buf)
00028a 0da5      	ADD  R26,R5
00028b 1db6      	ADC  R27,R6
00028c 91ec      	LD   R30,X
00028d 93e0 00bb 	STS  187,R30
00028f e8e5      	LDI  R30,LOW(133)
000290 c011      	RJMP _0x59
                 _0x42:
000291 3be0      	CPI  R30,LOW(0xB0)
000292 e0a0      	LDI  R26,HIGH(0xB0)
000293 07fa      	CPC  R31,R26
000294 f411      	BRNE _0x46
000295 d0e1      	RCALL SUBOPT_0x7
000296 c008      	RJMP _0x58
                 _0x46:
000297 3ce0      	CPI  R30,LOW(0xC0)
000298 e0a0      	LDI  R26,HIGH(0xC0)
000299 07fa      	CPC  R31,R26
00029a f021      	BREQ _0x58
00029b 3ce8      	CPI  R30,LOW(0xC8)
00029c e0a0      	LDI  R26,HIGH(0xC8)
00029d 07fa      	CPC  R31,R26
00029e f429      	BRNE _0x32
                 _0x58:
00029f 91e0 00bc 	LDS  R30,188
0002a1 6ce0      	ORI  R30,LOW(0xC0)
                 _0x59:
0002a2 93e0 00bc 	STS  188,R30
                 _0x32:
0002a4 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x34:
000360           	.BYTE 0x68
                 ;interrupt [19] void usart_rx_isr(void) {
                 ; 0000 001D interrupt [19] void usart_rx_isr(void) {
                 
                 	.CSEG
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
0002a5 93aa      	ST   -Y,R26
0002a6 93ba      	ST   -Y,R27
0002a7 93ea      	ST   -Y,R30
0002a8 93fa      	ST   -Y,R31
0002a9 b7ef      	IN   R30,SREG
0002aa 93ea      	ST   -Y,R30
                 ; 0000 001E UART_Data_In = 1;
0002ab e0e1      	LDI  R30,LOW(1)
0002ac e0f0      	LDI  R31,HIGH(1)
0002ad 93e0 0496 	STS  _UART_Data_In,R30
0002af 93f0 0497 	STS  _UART_Data_In+1,R31
                 ; 0000 001F if (UART_Rx_Index <50){
0002b1 e3e2      	LDI  R30,LOW(50)
0002b2 e0f0      	LDI  R31,HIGH(50)
0002b3 16de      	CP   R13,R30
0002b4 06ef      	CPC  R14,R31
0002b5 f464      	BRGE _0x49
                 ; 0000 0020 UART_Rx_Buf[UART_Rx_Index++] = UDR0;
                +
0002b6 2ded     +MOV R30 , R13
0002b7 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
0002b8 9631      	ADIW R30,1
                +
0002b9 2ede     +MOV R13 , R30
0002ba 2eef     +MOV R14 , R31
                 	__PUTW1R 13,14
0002bb 9731      	SBIW R30,1
0002bc 59ec      	SUBI R30,LOW(-_UART_Rx_Buf)
0002bd 4ffb      	SBCI R31,HIGH(-_UART_Rx_Buf)
0002be 01df      	MOVW R26,R30
0002bf 91e0 00c6 	LDS  R30,198
0002c1 93ec      	ST   X,R30
                 ; 0000 0021 }
                 ; 0000 0022 }
                 _0x49:
0002c2 91e9      	LD   R30,Y+
0002c3 bfef      	OUT  SREG,R30
0002c4 91f9      	LD   R31,Y+
0002c5 91e9      	LD   R30,Y+
0002c6 91b9      	LD   R27,Y+
0002c7 91a9      	LD   R26,Y+
0002c8 9518      	RETI
                 ; .FEND
                 ;interrupt [25] void TWI_isr(void){
                 ; 0000 0024 interrupt [25] void TWI_isr(void){
                 _TWI_isr:
                 ; .FSTART _TWI_isr
0002c9 920a      	ST   -Y,R0
0002ca 921a      	ST   -Y,R1
0002cb 92fa      	ST   -Y,R15
0002cc 936a      	ST   -Y,R22
0002cd 937a      	ST   -Y,R23
0002ce 938a      	ST   -Y,R24
0002cf 939a      	ST   -Y,R25
0002d0 93aa      	ST   -Y,R26
0002d1 93ba      	ST   -Y,R27
0002d2 93ea      	ST   -Y,R30
0002d3 93fa      	ST   -Y,R31
0002d4 b7ef      	IN   R30,SREG
0002d5 93ea      	ST   -Y,R30
                 ; 0000 0025 TWI_Slave_Int();
0002d6 df5a      	RCALL _TWI_Slave_Int
                 ; 0000 0026 }
0002d7 91e9      	LD   R30,Y+
0002d8 bfef      	OUT  SREG,R30
0002d9 91f9      	LD   R31,Y+
0002da 91e9      	LD   R30,Y+
0002db 91b9      	LD   R27,Y+
0002dc 91a9      	LD   R26,Y+
0002dd 9199      	LD   R25,Y+
0002de 9189      	LD   R24,Y+
0002df 9179      	LD   R23,Y+
0002e0 9169      	LD   R22,Y+
0002e1 90f9      	LD   R15,Y+
0002e2 9019      	LD   R1,Y+
0002e3 9009      	LD   R0,Y+
0002e4 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0029 {
                 _main:
                 ; .FSTART _main
                 ; 0000 002A uart_init(9600);
0002e5 e8a0      	LDI  R26,LOW(9600)
0002e6 e2b5      	LDI  R27,HIGH(9600)
0002e7 de25      	RCALL _uart_init
                 ; 0000 002B TWI_Init(own_address, 1, 100000);
0002e8 e0e1      	LDI  R30,LOW(1)
0002e9 93ea      	ST   -Y,R30
0002ea 93ea      	ST   -Y,R30
0002eb eaa0      	LDI  R26,LOW(160)
0002ec de91      	RCALL _TWI_Init
                 ; 0000 002C 
                 ; 0000 002D while (1)
                 _0x4A:
                 ; 0000 002E {
                 ; 0000 002F 
                 ; 0000 0030 //If receive data from UART, transfer them into TWI (Master transmit mode)
                 ; 0000 0031 if (UART_Data_In) {
0002ed 91e0 0496 	LDS  R30,_UART_Data_In
0002ef 91f0 0497 	LDS  R31,_UART_Data_In+1
0002f1 9730      	SBIW R30,0
0002f2 f179      	BREQ _0x4D
                 ; 0000 0032 uart_putstring("Data received from UART : ");
                +
0002f3 eca8     +LDI R26 , LOW ( _0x4E + ( 0 ) )
0002f4 e0b3     +LDI R27 , HIGH ( _0x4E + ( 0 ) )
                 	__POINTW2MN _0x4E,0
0002f5 de41      	RCALL _uart_putstring
                 ; 0000 0033 uart_putstring(UART_Rx_Buf);
0002f6 e6a4      	LDI  R26,LOW(_UART_Rx_Buf)
0002f7 e0b4      	LDI  R27,HIGH(_UART_Rx_Buf)
0002f8 de3e      	RCALL _uart_putstring
                 ; 0000 0034 uart_putstring("\n");
                +
0002f9 eea3     +LDI R26 , LOW ( _0x4E + ( 27 ) )
0002fa e0b3     +LDI R27 , HIGH ( _0x4E + ( 27 ) )
                 	__POINTW2MN _0x4E,27
0002fb de3b      	RCALL _uart_putstring
                 ; 0000 0035 //Reset Rx_Buf
                 ; 0000 0036 for (i = 0; i<UART_Rx_Index;i++){
0002fc 24bb      	CLR  R11
0002fd 24cc      	CLR  R12
                 _0x50:
                +
0002fe 14bd     +CP R11 , R13
0002ff 04ce     +CPC R12 , R14
                 	__CPWRR 11,12,13,14
000300 f474      	BRGE _0x51
                 ; 0000 0037 TWI_Tx_Buf[i] = UART_Rx_Buf[i];
                +
000301 2deb     +MOV R30 , R11
000302 2dfc     +MOV R31 , R12
                 	__GETW1R 11,12
000303 5cee      	SUBI R30,LOW(-_TWI_Tx_Buf)
000304 4ffb      	SBCI R31,HIGH(-_TWI_Tx_Buf)
000305 010f      	MOVW R0,R30
000306 d07c      	RCALL SUBOPT_0x8
000307 91ec      	LD   R30,X
000308 01d0      	MOVW R26,R0
000309 93ec      	ST   X,R30
                 ; 0000 0038 UART_Rx_Buf[i] = 0;
00030a d078      	RCALL SUBOPT_0x8
00030b e0e0      	LDI  R30,LOW(0)
00030c 93ec      	ST   X,R30
                 ; 0000 0039 }
00030d d049      	RCALL SUBOPT_0x3
00030e cfef      	RJMP _0x50
                 _0x51:
                 ; 0000 003A if (TWI_Master_Send(slave_address,TWI_Tx_Buf,UART_Rx_Index))
00030f e0e2      	LDI  R30,LOW(2)
000310 93ea      	ST   -Y,R30
000311 e3e2      	LDI  R30,LOW(_TWI_Tx_Buf)
000312 e0f4      	LDI  R31,HIGH(_TWI_Tx_Buf)
000313 93fa      	ST   -Y,R31
000314 93ea      	ST   -Y,R30
                +
000315 2dad     +MOV R26 , R13
000316 2dbe     +MOV R27 , R14
                 	__GETW2R 13,14
000317 def9      	RCALL _TWI_Master_Send
000318 30e0      	CPI  R30,0
000319 f009      	BREQ _0x52
                 ; 0000 003B TWI_Error();
00031a def3      	RCALL _TWI_Error
                 ; 0000 003C UART_Rx_Index = 0;
                 _0x52:
00031b 24dd      	CLR  R13
00031c 24ee      	CLR  R14
                 ; 0000 003D UART_Data_In = 0;
00031d e0e0      	LDI  R30,LOW(0)
00031e 93e0 0496 	STS  _UART_Data_In,R30
000320 93e0 0497 	STS  _UART_Data_In+1,R30
                 ; 0000 003E }
                 ; 0000 003F //If receive data from TWI, transfer them into UART
                 ; 0000 0040 if (TWI_Data_In){
                 _0x4D:
000322 2c07      	MOV  R0,R7
000323 2808      	OR   R0,R8
000324 f0d1      	BREQ _0x53
                 ; 0000 0041 uart_putstring("Data received from TWI: ");
                +
000325 eea5     +LDI R26 , LOW ( _0x4E + ( 29 ) )
000326 e0b3     +LDI R27 , HIGH ( _0x4E + ( 29 ) )
                 	__POINTW2MN _0x4E,29
000327 de0f      	RCALL _uart_putstring
                 ; 0000 0042 uart_putstring(TWI_Rx_Buf);
000328 e0a0      	LDI  R26,LOW(_TWI_Rx_Buf)
000329 e0b4      	LDI  R27,HIGH(_TWI_Rx_Buf)
00032a de0c      	RCALL _uart_putstring
                 ; 0000 0043 uart_putstring("\n");
                +
00032b efae     +LDI R26 , LOW ( _0x4E + ( 54 ) )
00032c e0b3     +LDI R27 , HIGH ( _0x4E + ( 54 ) )
                 	__POINTW2MN _0x4E,54
00032d de09      	RCALL _uart_putstring
                 ; 0000 0044 for (i = 0; i<TWI_Rx_Index;i++)
00032e 24bb      	CLR  R11
00032f 24cc      	CLR  R12
                 _0x55:
                +
000330 14b3     +CP R11 , R3
000331 04c4     +CPC R12 , R4
                 	__CPWRR 11,12,3,4
000332 f444      	BRGE _0x56
                 ; 0000 0045 TWI_Rx_Buf[i] = 0;
000333 e0a0      	LDI  R26,LOW(_TWI_Rx_Buf)
000334 e0b4      	LDI  R27,HIGH(_TWI_Rx_Buf)
000335 0dab      	ADD  R26,R11
000336 1dbc      	ADC  R27,R12
000337 e0e0      	LDI  R30,LOW(0)
000338 93ec      	ST   X,R30
000339 d01d      	RCALL SUBOPT_0x3
00033a cff5      	RJMP _0x55
                 _0x56:
                 ; 0000 0046 TWI_Rx_Index = 0;
00033b 2433      	CLR  R3
00033c 2444      	CLR  R4
                 ; 0000 0047 TWI_Data_In = 0;
00033d 2477      	CLR  R7
00033e 2488      	CLR  R8
                 ; 0000 0048 }
                 ; 0000 0049 
                 ; 0000 004A delay_ms(1000);
                 _0x53:
00033f eea8      	LDI  R26,LOW(1000)
000340 e0b3      	LDI  R27,HIGH(1000)
000341 d0d9      	RCALL _delay_ms
                 ; 0000 004B 
                 ; 0000 004C }
000342 cfaa      	RJMP _0x4A
                 ; 0000 004D }
                 _0x57:
000343 cfff      	RJMP _0x57
                 ; .FEND
                 
                 	.DSEG
                 _0x4E:
0003c8           	.BYTE 0x38
                 
                 	.DSEG
                 _TWI_Rx_Buf:
000400           	.BYTE 0x32
                 _TWI_Tx_Buf:
000432           	.BYTE 0x32
                 _UART_Rx_Buf:
000464           	.BYTE 0x32
                 _UART_Data_In:
000496           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
                +
000344 e0a0     +LDI R26 , LOW ( 0xF42400 )
000345 e2b4     +LDI R27 , HIGH ( 0xF42400 )
000346 ef84     +LDI R24 , BYTE3 ( 0xF42400 )
000347 e090     +LDI R25 , BYTE4 ( 0xF42400 )
                 	__GETD2N 0xF42400
000348 d0a5      	RCALL __DIVD21
000349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
00034a ddec      	RCALL _uart_putstring
00034b 91e0 00b9 	LDS  R30,185
00034d e0f0      	LDI  R31,0
00034e 7fe8      	ANDI R30,LOW(0xF8)
00034f 70f0      	ANDI R31,HIGH(0xF8)
000350 01df      	MOVW R26,R30
000351 cdfa      	RJMP _uart_put_int
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
000352 dde4      	RCALL _uart_putstring
000353 91e0 00b9 	LDS  R30,185
000355 7fe8      	ANDI R30,LOW(0xF8)
000356 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000357 e0e1      	LDI  R30,LOW(1)
000358 e0f0      	LDI  R31,HIGH(1)
                +
000359 0ebe     +ADD R11 , R30
00035a 1ecf     +ADC R12 , R31
                 	__ADDWRR 11,12,30,31
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00035c e3e1      	LDI  R30,LOW(49)
00035d e0f0      	LDI  R31,HIGH(49)
00035e 163e      	CP   R3,R30
00035f 064f      	CPC  R4,R31
000360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
                +
000361 2de3     +MOV R30 , R3
000362 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
000363 9631      	ADIW R30,1
                +
000364 2e3e     +MOV R3 , R30
000365 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
000366 9731      	SBIW R30,1
000367 50e0      	SUBI R30,LOW(-_TWI_Rx_Buf)
000368 4ffc      	SBCI R31,HIGH(-_TWI_Rx_Buf)
000369 01df      	MOVW R26,R30
00036a 91e0 00bb 	LDS  R30,187
00036c 93ec      	ST   X,R30
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
                +
00036e 2da3     +MOV R26 , R3
00036f 2db4     +MOV R27 , R4
                 	__GETW2R 3,4
000370 50a0      	SUBI R26,LOW(-_TWI_Rx_Buf)
000371 4fbc      	SBCI R27,HIGH(-_TWI_Rx_Buf)
000372 91e0 00bb 	LDS  R30,187
000374 93ec      	ST   X,R30
000375 e8e5      	LDI  R30,LOW(133)
000376 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7:
                +
000377 2de5     +MOV R30 , R5
000378 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
000379 9631      	ADIW R30,1
                +
00037a 2e5e     +MOV R5 , R30
00037b 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
00037c 9731      	SBIW R30,1
00037d 5cee      	SUBI R30,LOW(-_TWI_Tx_Buf)
00037e 4ffb      	SBCI R31,HIGH(-_TWI_Tx_Buf)
00037f 81e0      	LD   R30,Z
000380 93e0 00bb 	STS  187,R30
000382 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000383 e6a4      	LDI  R26,LOW(_UART_Rx_Buf)
000384 e0b4      	LDI  R27,HIGH(_UART_Rx_Buf)
000385 0dab      	ADD  R26,R11
000386 1dbc      	ADC  R27,R12
000387 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000388 935a      	ST   -Y,R21
                 __SAVELOCR5:
000389 934a      	ST   -Y,R20
                 __SAVELOCR4:
00038a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00038b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00038c 931a      	ST   -Y,R17
00038d 930a      	ST   -Y,R16
00038e 9508      	RET
                 
                 __LOADLOCR6:
00038f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000390 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000391 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000392 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000393 8119      	LDD  R17,Y+1
000394 8108      	LD   R16,Y
000395 9508      	RET
                 
                 __ANEGW1:
000396 95f1      	NEG  R31
000397 95e1      	NEG  R30
000398 40f0      	SBCI R31,0
000399 9508      	RET
                 
                 __ANEGD1:
00039a 95f0      	COM  R31
00039b 9560      	COM  R22
00039c 9570      	COM  R23
00039d 95e1      	NEG  R30
00039e 4fff      	SBCI R31,-1
00039f 4f6f      	SBCI R22,-1
0003a0 4f7f      	SBCI R23,-1
0003a1 9508      	RET
                 
                 __ANEGD2:
0003a2 95b0      	COM  R27
0003a3 9580      	COM  R24
0003a4 9590      	COM  R25
0003a5 95a1      	NEG  R26
0003a6 4fbf      	SBCI R27,-1
0003a7 4f8f      	SBCI R24,-1
0003a8 4f9f      	SBCI R25,-1
0003a9 9508      	RET
                 
                 __LSLB12:
0003aa 23ee      	TST  R30
0003ab 2e0e      	MOV  R0,R30
0003ac 2fea      	MOV  R30,R26
0003ad f019      	BREQ __LSLB12R
                 __LSLB12L:
0003ae 0fee      	LSL  R30
0003af 940a      	DEC  R0
0003b0 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0003b1 9508      	RET
                 
                 __DIVW21U:
0003b2 2400      	CLR  R0
0003b3 2411      	CLR  R1
0003b4 e190      	LDI  R25,16
                 __DIVW21U1:
0003b5 0faa      	LSL  R26
0003b6 1fbb      	ROL  R27
0003b7 1c00      	ROL  R0
0003b8 1c11      	ROL  R1
0003b9 1a0e      	SUB  R0,R30
0003ba 0a1f      	SBC  R1,R31
0003bb f418      	BRCC __DIVW21U2
0003bc 0e0e      	ADD  R0,R30
0003bd 1e1f      	ADC  R1,R31
0003be c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0003bf 60a1      	SBR  R26,1
                 __DIVW21U3:
0003c0 959a      	DEC  R25
0003c1 f799      	BRNE __DIVW21U1
0003c2 01fd      	MOVW R30,R26
0003c3 01d0      	MOVW R26,R0
0003c4 9508      	RET
                 
                 __DIVW21:
0003c5 d03b      	RCALL __CHKSIGNW
0003c6 dfeb      	RCALL __DIVW21U
0003c7 f40e      	BRTC __DIVW211
0003c8 dfcd      	RCALL __ANEGW1
                 __DIVW211:
0003c9 9508      	RET
                 
                 __DIVD21U:
0003ca 933f      	PUSH R19
0003cb 934f      	PUSH R20
0003cc 935f      	PUSH R21
0003cd 2400      	CLR  R0
0003ce 2411      	CLR  R1
0003cf 01a0      	MOVW R20,R0
0003d0 e230      	LDI  R19,32
                 __DIVD21U1:
0003d1 0faa      	LSL  R26
0003d2 1fbb      	ROL  R27
0003d3 1f88      	ROL  R24
0003d4 1f99      	ROL  R25
0003d5 1c00      	ROL  R0
0003d6 1c11      	ROL  R1
0003d7 1f44      	ROL  R20
0003d8 1f55      	ROL  R21
0003d9 1a0e      	SUB  R0,R30
0003da 0a1f      	SBC  R1,R31
0003db 0b46      	SBC  R20,R22
0003dc 0b57      	SBC  R21,R23
0003dd f428      	BRCC __DIVD21U2
0003de 0e0e      	ADD  R0,R30
0003df 1e1f      	ADC  R1,R31
0003e0 1f46      	ADC  R20,R22
0003e1 1f57      	ADC  R21,R23
0003e2 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003e3 60a1      	SBR  R26,1
                 __DIVD21U3:
0003e4 953a      	DEC  R19
0003e5 f759      	BRNE __DIVD21U1
0003e6 01fd      	MOVW R30,R26
0003e7 01bc      	MOVW R22,R24
0003e8 01d0      	MOVW R26,R0
0003e9 01ca      	MOVW R24,R20
0003ea 915f      	POP  R21
0003eb 914f      	POP  R20
0003ec 913f      	POP  R19
0003ed 9508      	RET
                 
                 __DIVD21:
0003ee d020      	RCALL __CHKSIGND
0003ef dfda      	RCALL __DIVD21U
0003f0 f40e      	BRTC __DIVD211
0003f1 dfa8      	RCALL __ANEGD1
                 __DIVD211:
0003f2 9508      	RET
                 
                 __MODW21:
0003f3 94e8      	CLT
0003f4 ffb7      	SBRS R27,7
0003f5 c004      	RJMP __MODW211
0003f6 95b1      	NEG  R27
0003f7 95a1      	NEG  R26
0003f8 40b0      	SBCI R27,0
0003f9 9468      	SET
                 __MODW211:
0003fa fdf7      	SBRC R31,7
0003fb df9a      	RCALL __ANEGW1
0003fc dfb5      	RCALL __DIVW21U
0003fd 01fd      	MOVW R30,R26
0003fe f40e      	BRTC __MODW212
0003ff df96      	RCALL __ANEGW1
                 __MODW212:
000400 9508      	RET
                 
                 __CHKSIGNW:
000401 94e8      	CLT
000402 fff7      	SBRS R31,7
000403 c002      	RJMP __CHKSW1
000404 df91      	RCALL __ANEGW1
000405 9468      	SET
                 __CHKSW1:
000406 ffb7      	SBRS R27,7
000407 c006      	RJMP __CHKSW2
000408 95b1      	NEG  R27
000409 95a1      	NEG  R26
00040a 40b0      	SBCI R27,0
00040b f800      	BLD  R0,0
00040c 9403      	INC  R0
00040d fa00      	BST  R0,0
                 __CHKSW2:
00040e 9508      	RET
                 
                 __CHKSIGND:
00040f 94e8      	CLT
000410 ff77      	SBRS R23,7
000411 c002      	RJMP __CHKSD1
000412 df87      	RCALL __ANEGD1
000413 9468      	SET
                 __CHKSD1:
000414 ff97      	SBRS R25,7
000415 c004      	RJMP __CHKSD2
000416 df8b      	RCALL __ANEGD2
000417 f800      	BLD  R0,0
000418 9403      	INC  R0
000419 fa00      	BST  R0,0
                 __CHKSD2:
00041a 9508      	RET
                 
                 _delay_ms:
00041b 9610      	adiw r26,0
00041c f039      	breq __delay_ms1
                 __delay_ms0:
00041d 95a8      	wdr
                +
00041e ed80     +LDI R24 , LOW ( 0x7D0 )
00041f e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000420 9701     +SBIW R24 , 1
000421 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000422 9711      	sbiw r26,1
000423 f7c9      	brne __delay_ms0
                 __delay_ms1:
000424 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  34 r1 :  11 r2 :   0 r3 :   8 r4 :   8 r5 :   4 r6 :   4 r7 :   3 
r8 :   3 r9 :   0 r10:   1 r11:  11 r12:  11 r13:   6 r14:   6 r15:   2 
r16:  26 r17:  24 r18:  10 r19:  14 r20:  14 r21:  11 r22:  23 r23:  12 
r24:  19 r25:  12 r26: 113 r27:  52 r28:   9 r29:   1 r30: 197 r31:  70 
x  :  16 y  :  85 z  :   9 
Registers used: 33 out of 35 (94.3%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  11 add   :  11 
adiw  :  11 and   :   0 andi  :  11 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  15 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  22 brpl  :   0 brsh  :   0 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   2 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  25 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   6 
cp    :   7 cpc   :  19 cpi   :  19 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  27 ld    :  29 ldd   :  21 ldi   : 134 
lds   :  17 lpm   :   7 lsl   :   4 lsr   :   0 mov   :  37 movw  :  37 
mul   :   0 muls  :   0 mulsu :   0 neg   :   8 nop   :   0 or    :   2 
ori   :   2 out   :   8 pop   :   3 push  :   3 rcall :  80 ret   :  33 
reti  :   2 rjmp  :  36 rol   :  10 ror   :   0 sbc   :   5 sbci  :  20 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  12 sbr   :   2 sbrc  :   1 
sbrs  :   5 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  53 std   :   0 sts   :  22 sub   :   2 subi  :  11 swap  :   0 
tst   :   1 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00084a   1782    340   2122   32768   6.5%
[.dseg] 0x000100 0x000498      0    408    408    2048  19.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 11 warnings

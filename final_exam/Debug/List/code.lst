
AVRASM ver. 2.1.30  D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm Fri May 24 16:26:49 2024

D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1421): warning: Register r3 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1422): warning: Register r4 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1423): warning: Register r5 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1424): warning: Register r6 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1425): warning: Register r7 already defined by the .DEF directive
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1426): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.01 Evaluation
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _b=R3
                 	.DEF _b_msb=R4
                 	.DEF _pos=R5
                 	.DEF _pos_msb=R6
                 	.DEF _sp=R7
                 	.DEF _sp_msb=R8
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004f 	JMP  __RESET
000002 940c 011c 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00003d 0000
00003e 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
00003f 0020
000040 4441
000041 3a43
000042 2520      	.DB  0x20,0x0,0x41,0x44,0x43,0x3A,0x20,0x25
000043 0a66
D:\K66\Ky 6 (23-24)\Embedded System\final_exam\Debug\List\code.asm(1477): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x66,0xA,0x0
                 
                 __GLOBAL_INI_TBL:
000045 0004      	.DW  0x04
000046 0005      	.DW  0x05
000047 007a      	.DW  __REG_VARS*2
                 
000048 0002      	.DW  0x02
000049 0300      	.DW  _0x1C
00004a 007e      	.DW  _0x0*2
                 
00004b 0002      	.DW  0x02
00004c 0302      	.DW  _0x1C+2
00004d 0087      	.DW  _0x0*2+9
                 
                 _0xFFFFFFFF:
00004e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004f 94f8      	CLI
                 
000050 27ee      	CLR  R30
000051 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000052 e0f1      	LDI  R31,1
000053 bff5      	OUT  MCUCR,R31
000054 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000055 e08d      	LDI  R24,(14-2)+1
000056 e0a2      	LDI  R26,2
000057 27bb      	CLR  R27
                 __CLEAR_REG:
000058 93ed      	ST   X+,R30
000059 958a      	DEC  R24
00005a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005d e0a0      	LDI  R26,LOW(__SRAM_START)
00005e e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000062 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000063 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000064 9185      	LPM  R24,Z+
000065 9195      	LPM  R25,Z+
000066 9700      	SBIW R24,0
000067 f061      	BREQ __GLOBAL_INI_END
000068 91a5      	LPM  R26,Z+
000069 91b5      	LPM  R27,Z+
00006a 9005      	LPM  R0,Z+
00006b 9015      	LPM  R1,Z+
00006c 01bf      	MOVW R22,R30
00006d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006e 9005      	LPM  R0,Z+
00006f 920d      	ST   X+,R0
000070 9701      	SBIW R24,1
000071 f7e1      	BRNE __GLOBAL_INI_LOOP
000072 01fb      	MOVW R30,R22
000073 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000074 e0e0      	LDI  R30,__GPIOR0_INIT
000075 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000076 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000077 bfed      	OUT  SPL,R30
000078 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000079 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007a e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007b e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007c 940c 014d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _uart_init:
                 ; .FSTART _uart_init
00007e 93ba      	ST   -Y,R27
00007f 93aa      	ST   -Y,R26
000080 931a      	ST   -Y,R17
000081 930a      	ST   -Y,R16
                 ;	BAUDRATE -> Y+2
                 ;	n -> R16,R17
000082 81ea      	LDD  R30,Y+2
000083 81fb      	LDD  R31,Y+2+1
000084 2766      	CLR  R22
000085 2777      	CLR  R23
                +
000086 e0a0     +LDI R26 , LOW ( 0xF42400 )
000087 e2b4     +LDI R27 , HIGH ( 0xF42400 )
000088 ef84     +LDI R24 , BYTE3 ( 0xF42400 )
000089 e090     +LDI R25 , BYTE4 ( 0xF42400 )
                 	__GETD2N 0xF42400
00008a d366      	RCALL __DIVD21
00008b 01df      	MOVW R26,R30
00008c 01cb      	MOVW R24,R22
                +
00008d e1e0     +LDI R30 , LOW ( 0x10 )
00008e e0f0     +LDI R31 , HIGH ( 0x10 )
00008f e060     +LDI R22 , BYTE3 ( 0x10 )
000090 e070     +LDI R23 , BYTE4 ( 0x10 )
                 	__GETD1N 0x10
000091 d35f      	RCALL __DIVD21
000092 9731      	SBIW R30,1
000093 018f      	MOVW R16,R30
000094 9310 00c5 	STS  197,R17
000096 9300 00c4 	STS  196,R16
000098 e0e6      	LDI  R30,LOW(6)
000099 93e0 00c2 	STS  194,R30
00009b e9e8      	LDI  R30,LOW(152)
00009c 93e0 00c1 	STS  193,R30
00009e 9478      	SEI
00009f 8119      	LDD  R17,Y+1
0000a0 8108      	LDD  R16,Y+0
0000a1 9624      	ADIW R28,4
0000a2 9508      	RET
                 ; .FEND
                 _uart_putchar:
                 ; .FSTART _uart_putchar
0000a3 931a      	ST   -Y,R17
0000a4 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x3:
0000a5 91e0 00c0 	LDS  R30,192
0000a7 72e0      	ANDI R30,LOW(0x20)
0000a8 f3e1      	BREQ _0x3
0000a9 9310 00c6 	STS  198,R17
0000ab 9119      	LD   R17,Y+
0000ac 9508      	RET
                 ; .FEND
                 _uart_putstring:
                 ; .FSTART _uart_putstring
0000ad 931a      	ST   -Y,R17
0000ae 930a      	ST   -Y,R16
0000af 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x6:
0000b0 01d8      	MOVW R26,R16
0000b1 91ec      	LD   R30,X
0000b2 30e0      	CPI  R30,0
0000b3 f059      	BREQ _0x8
0000b4 91ac      	LD   R26,X
0000b5 dfed      	RCALL _uart_putchar
0000b6 01d8      	MOVW R26,R16
0000b7 91ac      	LD   R26,X
0000b8 30aa      	CPI  R26,LOW(0xA)
0000b9 f411      	BRNE _0x9
0000ba e0ad      	LDI  R26,LOW(13)
0000bb dfe7      	RCALL _uart_putchar
                 _0x9:
                +
0000bc 5f0f     +SUBI R16 , LOW ( - 1 )
0000bd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000be cff1      	RJMP _0x6
                 _0x8:
0000bf c049      	RJMP _0x2060002
                 ; .FEND
                 _uart_put_int:
                 ; .FSTART _uart_put_int
0000c0 93ba      	ST   -Y,R27
0000c1 93aa      	ST   -Y,R26
0000c2 9728      	SBIW R28,8
0000c3 d2c7      	RCALL __SAVELOCR6
                 ;	value -> Y+14
                 ;	buf -> Y+6
                 ;	index -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
0000c4 e000     +LDI R16 , LOW ( 0 )
0000c5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0000c6 854e     +LDD R20 , Y + 14
0000c7 855f     +LDD R21 , Y + 14 + 1
                 	__GETWRS 20,21,14
                 _0xB:
0000c8 01f8      	MOVW R30,R16
0000c9 01de      	MOVW R26,R28
0000ca 9616      	ADIW R26,6
0000cb 0fea      	ADD  R30,R26
0000cc 1ffb      	ADC  R31,R27
0000cd 01bf      	MOVW R22,R30
0000ce 01da      	MOVW R26,R20
0000cf e0ea      	LDI  R30,LOW(10)
0000d0 e0f0      	LDI  R31,HIGH(10)
0000d1 d324      	RCALL __MODW21
0000d2 5de0      	SUBI R30,-LOW(48)
0000d3 01db      	MOVW R26,R22
0000d4 93ec      	ST   X,R30
0000d5 01da      	MOVW R26,R20
0000d6 e0ea      	LDI  R30,LOW(10)
0000d7 e0f0      	LDI  R31,HIGH(10)
0000d8 d2ef      	RCALL __DIVW21
0000d9 01af      	MOVW R20,R30
                +
0000da 5f0f     +SUBI R16 , LOW ( - 1 )
0000db 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000dc 2e04      	MOV  R0,R20
0000dd 2a05      	OR   R0,R21
0000de f749      	BRNE _0xB
0000df 0198      	MOVW R18,R16
                 _0xE:
0000e0 2400      	CLR  R0
0000e1 1602      	CP   R0,R18
0000e2 0603      	CPC  R0,R19
0000e3 f45c      	BRGE _0xF
0000e4 01f9      	MOVW R30,R18
0000e5 9731      	SBIW R30,1
0000e6 01de      	MOVW R26,R28
0000e7 9616      	ADIW R26,6
0000e8 0fae      	ADD  R26,R30
0000e9 1fbf      	ADC  R27,R31
0000ea 91ac      	LD   R26,X
0000eb dfb7      	RCALL _uart_putchar
                +
0000ec 5021     +SUBI R18 , LOW ( 1 )
0000ed 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
0000ee cff1      	RJMP _0xE
                 _0xF:
0000ef d2a2      	RCALL __LOADLOCR6
0000f0 9660      	ADIW R28,16
0000f1 9508      	RET
                 ; .FEND
                 _ADC_init:
                 ; .FSTART _ADC_init
0000f2 931a      	ST   -Y,R17
0000f3 930a      	ST   -Y,R16
0000f4 018d      	MOVW R16,R26
                 ;	pin -> R16,R17
0000f5 2fe0      	MOV  R30,R16
0000f6 64e0      	ORI  R30,0x40
0000f7 93e0 007c 	STS  124,R30
0000f9 e8e7      	LDI  R30,LOW(135)
0000fa 93e0 007a 	STS  122,R30
0000fc e7ae      	LDI  R26,LOW(126)
0000fd e0b0      	LDI  R27,HIGH(126)
0000fe 2f6a      	MOV  R22,R26
0000ff 901c      	LD   R1,X
000100 2fe0      	MOV  R30,R16
000101 e0a1      	LDI  R26,LOW(1)
000102 d2aa      	RCALL __LSLB12
000103 29e1      	OR   R30,R1
000104 2fa6      	MOV  R26,R22
000105 93ec      	ST   X,R30
000106 e0aa      	LDI  R26,LOW(10)
000107 e0b0      	LDI  R27,0
000108 d40c      	RCALL _delay_ms
                 _0x2060002:
000109 9109      	LD   R16,Y+
00010a 9119      	LD   R17,Y+
00010b 9508      	RET
                 ; .FEND
                 _read_ADC:
                 ; .FSTART _read_ADC
00010c 91e0 007a 	LDS  R30,122
00010e 64e0      	ORI  R30,0x40
00010f 93e0 007a 	STS  122,R30
                 _0x10:
000111 91e0 007a 	LDS  R30,122
000113 71e0      	ANDI R30,LOW(0x10)
000114 f3e1      	BREQ _0x10
000115 91e0 007a 	LDS  R30,122
000117 61e0      	ORI  R30,0x10
000118 93e0 007a 	STS  122,R30
00011a d243      	RCALL SUBOPT_0x0
00011b 9508      	RET
                 ; .FEND
                 ;interrupt [2] void ext_int0_isr(void){
                 ; 0000 0019 interrupt [2] void ext_int0_isr(void){
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
00011c 920a      	ST   -Y,R0
00011d 93ea      	ST   -Y,R30
00011e 93fa      	ST   -Y,R31
00011f b7ef      	IN   R30,SREG
000120 93ea      	ST   -Y,R30
                 ; 0000 001A if (b) pos++;
000121 2c03      	MOV  R0,R3
000122 2804      	OR   R0,R4
000123 f029      	BREQ _0x13
000124 e0e1      	LDI  R30,LOW(1)
000125 e0f0      	LDI  R31,HIGH(1)
                +
000126 0e5e     +ADD R5 , R30
000127 1e6f     +ADC R6 , R31
                 	__ADDWRR 5,6,30,31
                 ; 0000 001B else pos--;
000128 c005      	RJMP _0x14
                 _0x13:
                +
000129 2de5     +MOV R30 , R5
00012a 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
00012b 9731      	SBIW R30,1
                +
00012c 2e5e     +MOV R5 , R30
00012d 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
                 ; 0000 001C 
                 ; 0000 001D }
                 _0x14:
00012e 91e9      	LD   R30,Y+
00012f bfef      	OUT  SREG,R30
000130 91f9      	LD   R31,Y+
000131 91e9      	LD   R30,Y+
000132 9009      	LD   R0,Y+
000133 9518      	RETI
                 ; .FEND
                 ;void setMotor(int dir, int pwmVal) {
                 ; 0000 001F void setMotor(int dir, int pwmVal) {
                 _setMotor:
                 ; .FSTART _setMotor
                 ; 0000 0020 OCR0B = pwmVal;
000134 d258      	RCALL __SAVELOCR4
000135 018d      	MOVW R16,R26
                +
000136 812c     +LDD R18 , Y + 4
000137 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	dir -> R18,R19
                 ;	pwmVal -> R16,R17
000138 bd08      	OUT  0x28,R16
                 ; 0000 0021 if (dir == 1) {
000139 e0e1      	LDI  R30,LOW(1)
00013a e0f0      	LDI  R31,HIGH(1)
00013b 17e2      	CP   R30,R18
00013c 07f3      	CPC  R31,R19
00013d f411      	BRNE _0x15
                 ; 0000 0022 PORTD |= (1 << 7);
00013e 9a5f      	SBI  0xB,7
                 ; 0000 0023 PORTD &= ~(1 << 6);
00013f c009      	RJMP _0x1E
                 ; 0000 0024 } else if (dir == -1) {
                 _0x15:
000140 efef      	LDI  R30,LOW(65535)
000141 efff      	LDI  R31,HIGH(65535)
000142 17e2      	CP   R30,R18
000143 07f3      	CPC  R31,R19
000144 f419      	BRNE _0x17
                 ; 0000 0025 PORTD &= ~(1 << 7);
000145 985f      	CBI  0xB,7
                 ; 0000 0026 PORTD |= (1 << 6);
000146 9a5e      	SBI  0xB,6
                 ; 0000 0027 } else {
000147 c002      	RJMP _0x18
                 _0x17:
                 ; 0000 0028 PORTD &= ~(1 << 7);
000148 985f      	CBI  0xB,7
                 ; 0000 0029 PORTD &= ~(1 << 6);
                 _0x1E:
000149 985e      	CBI  0xB,6
                 ; 0000 002A }
                 _0x18:
                 ; 0000 002B 
                 ; 0000 002C }
00014a d249      	RCALL __LOADLOCR4
00014b 9626      	ADIW R28,6
00014c 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 002E {
                 _main:
                 ; .FSTART _main
                 ; 0000 002F 
                 ; 0000 0030 DDRD |= (1 << 5) | (1 << 7) | (1 << 6);
00014d b1ea      	IN   R30,0xA
00014e 6ee0      	ORI  R30,LOW(0xE0)
00014f b9ea      	OUT  0xA,R30
                 ; 0000 0031 TCCR0A |= (1 << WGM00) | (1 << WGM01) | (1 << COM0B1); // Fast PWM, non-inverting mode
000150 b5e4      	IN   R30,0x24
000151 62e3      	ORI  R30,LOW(0x23)
000152 bde4      	OUT  0x24,R30
                 ; 0000 0032 TCCR0B |= (1 << CS00) | (1 << CS01); // Prescaler 64
000153 b5e5      	IN   R30,0x25
000154 60e3      	ORI  R30,LOW(0x3)
000155 bde5      	OUT  0x25,R30
                 ; 0000 0033 
                 ; 0000 0034 // Initialize Timer1
                 ; 0000 0035 TCCR1B |= (1 << CS11);
000156 91e0 0081 	LDS  R30,129
000158 60e2      	ORI  R30,2
000159 93e0 0081 	STS  129,R30
                 ; 0000 0036 
                 ; 0000 0037 uart_init(9600);
00015b e8a0      	LDI  R26,LOW(9600)
00015c e2b5      	LDI  R27,HIGH(9600)
00015d df20      	RCALL _uart_init
                 ; 0000 0038 ADC_init(0);
00015e e0a0      	LDI  R26,LOW(0)
00015f e0b0      	LDI  R27,0
000160 df91      	RCALL _ADC_init
                 ; 0000 0039 EICRA=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (1<<ISC00);
000161 e0e3      	LDI  R30,LOW(3)
000162 93e0 0069 	STS  105,R30
                 ; 0000 003A EIMSK=(0<<INT1) | (1<<INT0);
000164 e0e1      	LDI  R30,LOW(1)
000165 bbed      	OUT  0x1D,R30
                 ; 0000 003B EIFR=(0<<INTF1) | (1<<INTF0);
000166 bbec      	OUT  0x1C,R30
                 ; 0000 003C #asm("sei")
000167 9478      	SEI
                 ; 0000 003D while (1)
                 _0x19:
                 ; 0000 003E {
                 ; 0000 003F setMotor(-1, 255);
000168 efef      	LDI  R30,LOW(65535)
000169 efff      	LDI  R31,HIGH(65535)
00016a 93fa      	ST   -Y,R31
00016b 93ea      	ST   -Y,R30
00016c efaf      	LDI  R26,LOW(255)
00016d e0b0      	LDI  R27,0
00016e dfc5      	RCALL _setMotor
                 ; 0000 0040 read_ADC();
00016f df9c      	RCALL _read_ADC
                 ; 0000 0041 ADC_value = ADCW;
000170 d1ed      	RCALL SUBOPT_0x0
000171 e2a4      	LDI  R26,LOW(_ADC_value)
000172 e0b3      	LDI  R27,HIGH(_ADC_value)
000173 2766      	CLR  R22
000174 2777      	CLR  R23
000175 d2e0      	RCALL __CDF1
                +
000176 93ed     +ST X + , R30
000177 93fd     +ST X + , R31
000178 936d     +ST X + , R22
000179 937c     +ST X , R23
                 	__PUTDP1
                 ; 0000 0042 ADC_value = (ADC_value*360)/1023;
00017a 91a0 0324 	LDS  R26,_ADC_value
00017c 91b0 0325 	LDS  R27,_ADC_value+1
00017e 9180 0326 	LDS  R24,_ADC_value+2
000180 9190 0327 	LDS  R25,_ADC_value+3
                +
000182 e0e0     +LDI R30 , LOW ( 0x43B40000 )
000183 e0f0     +LDI R31 , HIGH ( 0x43B40000 )
000184 eb64     +LDI R22 , BYTE3 ( 0x43B40000 )
000185 e473     +LDI R23 , BYTE4 ( 0x43B40000 )
                 	__GETD1N 0x43B40000
000186 d2fc      	RCALL __MULF12
000187 01df      	MOVW R26,R30
000188 01cb      	MOVW R24,R22
                +
000189 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00018a ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00018b e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00018c e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00018d d343      	RCALL __DIVF21
00018e 93e0 0324 	STS  _ADC_value,R30
000190 93f0 0325 	STS  _ADC_value+1,R31
000192 9360 0326 	STS  _ADC_value+2,R22
000194 9370 0327 	STS  _ADC_value+3,R23
                 ; 0000 0043 
                 ; 0000 0044 //sp = (11 * 99.3 * ADC_value) / 360;
                 ; 0000 0045 uart_put_int(sp);
                +
000196 2da7     +MOV R26 , R7
000197 2db8     +MOV R27 , R8
                 	__GETW2R 7,8
000198 df27      	RCALL _uart_put_int
                 ; 0000 0046 uart_putstring(" ");
                +
000199 e0a0     +LDI R26 , LOW ( _0x1C + ( 0 ) )
00019a e0b3     +LDI R27 , HIGH ( _0x1C + ( 0 ) )
                 	__POINTW2MN _0x1C,0
00019b df11      	RCALL _uart_putstring
                 ; 0000 0047 //uart_put_int(sp);
                 ; 0000 0048 
                 ; 0000 0049 sprintf(test, "ADC: %f\n", ADC_value);
00019c e0e4      	LDI  R30,LOW(_test)
00019d e0f3      	LDI  R31,HIGH(_test)
00019e 93fa      	ST   -Y,R31
00019f 93ea      	ST   -Y,R30
                +
0001a0 e8e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2 ) )
0001a1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW1FN _0x0,2
0001a2 93fa      	ST   -Y,R31
0001a3 93ea      	ST   -Y,R30
0001a4 91e0 0324 	LDS  R30,_ADC_value
0001a6 91f0 0325 	LDS  R31,_ADC_value+1
0001a8 9160 0326 	LDS  R22,_ADC_value+2
0001aa 9170 0327 	LDS  R23,_ADC_value+3
0001ac d275      	RCALL __PUTPARD1
0001ad e084      	LDI  R24,4
0001ae d15f      	RCALL _sprintf
0001af 9628      	ADIW R28,8
                 ; 0000 004A uart_putstring(test);
0001b0 e0a4      	LDI  R26,LOW(_test)
0001b1 e0b3      	LDI  R27,HIGH(_test)
0001b2 defa      	RCALL _uart_putstring
                 ; 0000 004B uart_putstring("\n");
                +
0001b3 e0a2     +LDI R26 , LOW ( _0x1C + ( 2 ) )
0001b4 e0b3     +LDI R27 , HIGH ( _0x1C + ( 2 ) )
                 	__POINTW2MN _0x1C,2
0001b5 def7      	RCALL _uart_putstring
                 ; 0000 004C delay_ms(1000);
0001b6 eea8      	LDI  R26,LOW(1000)
0001b7 e0b3      	LDI  R27,HIGH(1000)
0001b8 d35c      	RCALL _delay_ms
                 ; 0000 004D 
                 ; 0000 004E 
                 ; 0000 004F }
0001b9 cfae      	RJMP _0x19
                 ; 0000 0050 }
                 _0x1D:
0001ba cfff      	RJMP _0x1D
                 ; .FEND
                 
                 	.DSEG
                 _0x1C:
000300           	.BYTE 0x4
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0001bb d1cf      	RCALL __SAVELOCR6
0001bc 019d      	MOVW R18,R26
0001bd 815e      	LDD  R21,Y+6
0001be 9612      	ADIW R26,2
                +
0001bf 91ed     +LD R30 , X +
0001c0 91fc     +LD R31 , X
0001c1 9711     +SBIW R26 , 1
                 	__GETW1P
0001c2 9730      	SBIW R30,0
0001c3 f0e9      	BREQ _0x2000016
0001c4 01d9      	MOVW R26,R18
0001c5 d19d      	RCALL SUBOPT_0x1
0001c6 018f      	MOVW R16,R30
0001c7 9730      	SBIW R30,0
0001c8 f059      	BREQ _0x2000018
                +
0001c9 3002     +CPI R16 , LOW ( 2 )
0001ca e0e0     +LDI R30 , HIGH ( 2 )
0001cb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001cc f060      	BRLO _0x2000019
0001cd 01f8      	MOVW R30,R16
0001ce 9731      	SBIW R30,1
0001cf 018f      	MOVW R16,R30
                +
0001d0 01d9     +MOVW R26 , R18
0001d1 9614     +ADIW R26 , 4
0001d2 93ed     +ST X + , R30
0001d3 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000018:
0001d4 01d9      	MOVW R26,R18
0001d5 9612      	ADIW R26,2
0001d6 d191      	RCALL SUBOPT_0x2
0001d7 9731      	SBIW R30,1
0001d8 8350      	ST   Z,R21
                 _0x2000019:
0001d9 01d9      	MOVW R26,R18
                +
0001da 91ed     +LD R30 , X +
0001db 91fc     +LD R31 , X
0001dc 9711     +SBIW R26 , 1
                 	__GETW1P
0001dd 23ff      	TST  R31
0001de f00a      	BRMI _0x200001A
0001df d188      	RCALL SUBOPT_0x2
                 _0x200001A:
0001e0 c005      	RJMP _0x200001B
                 _0x2000016:
0001e1 01d9      	MOVW R26,R18
0001e2 efef      	LDI  R30,LOW(65535)
0001e3 efff      	LDI  R31,HIGH(65535)
0001e4 93ed      	ST   X+,R30
0001e5 93fc      	ST   X,R31
                 _0x200001B:
0001e6 d1ab      	RCALL __LOADLOCR6
0001e7 9627      	ADIW R28,7
0001e8 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001e9 93ba      	ST   -Y,R27
0001ea 93aa      	ST   -Y,R26
0001eb 9726      	SBIW R28,6
0001ec d19e      	RCALL __SAVELOCR6
0001ed e010      	LDI  R17,0
0001ee 85ac      	LDD  R26,Y+12
0001ef 85bd      	LDD  R27,Y+12+1
0001f0 e0e0      	LDI  R30,LOW(0)
0001f1 e0f0      	LDI  R31,HIGH(0)
0001f2 93ed      	ST   X+,R30
0001f3 93fc      	ST   X,R31
                 _0x200001C:
0001f4 89ea      	LDD  R30,Y+18
0001f5 89fb      	LDD  R31,Y+18+1
0001f6 9631      	ADIW R30,1
0001f7 8bea      	STD  Y+18,R30
0001f8 8bfb      	STD  Y+18+1,R31
0001f9 9731      	SBIW R30,1
0001fa 91e4      	LPM  R30,Z
0001fb 2f2e      	MOV  R18,R30
0001fc 30e0      	CPI  R30,0
0001fd f409      	BRNE PC+2
0001fe c108      	RJMP _0x200001E
0001ff 2fe1      	MOV  R30,R17
000200 30e0      	CPI  R30,0
000201 f431      	BRNE _0x2000022
000202 3225      	CPI  R18,37
000203 f411      	BRNE _0x2000023
000204 e011      	LDI  R17,LOW(1)
000205 c001      	RJMP _0x2000024
                 _0x2000023:
000206 d167      	RCALL SUBOPT_0x3
                 _0x2000024:
000207 c0fe      	RJMP _0x2000021
                 _0x2000022:
000208 30e1      	CPI  R30,LOW(0x1)
000209 f4a1      	BRNE _0x2000025
00020a 3225      	CPI  R18,37
00020b f411      	BRNE _0x2000026
00020c d161      	RCALL SUBOPT_0x3
00020d c0f7      	RJMP _0x20000D2
                 _0x2000026:
00020e e012      	LDI  R17,LOW(2)
00020f e040      	LDI  R20,LOW(0)
000210 e000      	LDI  R16,LOW(0)
000211 322d      	CPI  R18,45
000212 f411      	BRNE _0x2000027
000213 e001      	LDI  R16,LOW(1)
000214 c0f1      	RJMP _0x2000021
                 _0x2000027:
000215 322b      	CPI  R18,43
000216 f411      	BRNE _0x2000028
000217 e24b      	LDI  R20,LOW(43)
000218 c0ed      	RJMP _0x2000021
                 _0x2000028:
000219 3220      	CPI  R18,32
00021a f411      	BRNE _0x2000029
00021b e240      	LDI  R20,LOW(32)
00021c c0e9      	RJMP _0x2000021
                 _0x2000029:
00021d c002      	RJMP _0x200002A
                 _0x2000025:
00021e 30e2      	CPI  R30,LOW(0x2)
00021f f439      	BRNE _0x200002B
                 _0x200002A:
000220 e050      	LDI  R21,LOW(0)
000221 e013      	LDI  R17,LOW(3)
000222 3320      	CPI  R18,48
000223 f411      	BRNE _0x200002C
000224 6800      	ORI  R16,LOW(128)
000225 c0e0      	RJMP _0x2000021
                 _0x200002C:
000226 c003      	RJMP _0x200002D
                 _0x200002B:
000227 30e3      	CPI  R30,LOW(0x3)
000228 f009      	BREQ PC+2
000229 c0dc      	RJMP _0x2000021
                 _0x200002D:
00022a 3320      	CPI  R18,48
00022b f010      	BRLO _0x2000030
00022c 332a      	CPI  R18,58
00022d f008      	BRLO _0x2000031
                 _0x2000030:
00022e c007      	RJMP _0x200002F
                 _0x2000031:
00022f e0aa      	LDI  R26,LOW(10)
000230 9f5a      	MUL  R21,R26
000231 2d50      	MOV  R21,R0
000232 2fe2      	MOV  R30,R18
000233 53e0      	SUBI R30,LOW(48)
000234 0f5e      	ADD  R21,R30
000235 c0d0      	RJMP _0x2000021
                 _0x200002F:
000236 2fe2      	MOV  R30,R18
000237 36e3      	CPI  R30,LOW(0x63)
000238 f439      	BRNE _0x2000035
000239 d13b      	RCALL SUBOPT_0x4
00023a 89e8      	LDD  R30,Y+16
00023b 89f9      	LDD  R31,Y+16+1
00023c 81a4      	LDD  R26,Z+4
00023d 93aa      	ST   -Y,R26
00023e d13c      	RCALL SUBOPT_0x5
00023f c0c5      	RJMP _0x2000036
                 _0x2000035:
000240 37e3      	CPI  R30,LOW(0x73)
000241 f429      	BRNE _0x2000038
000242 d132      	RCALL SUBOPT_0x4
000243 d13d      	RCALL SUBOPT_0x6
000244 d100      	RCALL _strlen
000245 2f1e      	MOV  R17,R30
000246 c007      	RJMP _0x2000039
                 _0x2000038:
000247 37e0      	CPI  R30,LOW(0x70)
000248 f449      	BRNE _0x200003B
000249 d12b      	RCALL SUBOPT_0x4
00024a d136      	RCALL SUBOPT_0x6
00024b d105      	RCALL _strlenf
00024c 2f1e      	MOV  R17,R30
00024d 6008      	ORI  R16,LOW(8)
                 _0x2000039:
00024e 6002      	ORI  R16,LOW(2)
00024f 770f      	ANDI R16,LOW(127)
000250 e030      	LDI  R19,LOW(0)
000251 c037      	RJMP _0x200003C
                 _0x200003B:
000252 36e4      	CPI  R30,LOW(0x64)
000253 f011      	BREQ _0x200003F
000254 36e9      	CPI  R30,LOW(0x69)
000255 f411      	BRNE _0x2000040
                 _0x200003F:
000256 6004      	ORI  R16,LOW(4)
000257 c002      	RJMP _0x2000041
                 _0x2000040:
000258 37e5      	CPI  R30,LOW(0x75)
000259 f431      	BRNE _0x2000042
                 _0x2000041:
00025a e6e8      	LDI  R30,LOW(_tbl10_G100*2)
00025b e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00025c 83ee      	STD  Y+6,R30
00025d 83ff      	STD  Y+6+1,R31
00025e e015      	LDI  R17,LOW(5)
00025f c00c      	RJMP _0x2000043
                 _0x2000042:
000260 35e8      	CPI  R30,LOW(0x58)
000261 f411      	BRNE _0x2000045
000262 6008      	ORI  R16,LOW(8)
000263 c003      	RJMP _0x2000046
                 _0x2000045:
000264 37e8      	CPI  R30,LOW(0x78)
000265 f009      	BREQ PC+2
000266 c09e      	RJMP _0x2000077
                 _0x2000046:
000267 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000268 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000269 83ee      	STD  Y+6,R30
00026a 83ff      	STD  Y+6+1,R31
00026b e014      	LDI  R17,LOW(4)
                 _0x2000043:
00026c ff02      	SBRS R16,2
00026d c015      	RJMP _0x2000048
00026e d106      	RCALL SUBOPT_0x4
00026f 89a8      	LDD  R26,Y+16
000270 89b9      	LDD  R27,Y+16+1
000271 9614      	ADIW R26,4
000272 91ed      	LD   R30,X+
000273 91fd      	LD   R31,X+
000274 87ea      	STD  Y+10,R30
000275 87fb      	STD  Y+10+1,R31
000276 85ab      	LDD  R26,Y+11
000277 23aa      	TST  R26
000278 f422      	BRPL _0x2000049
000279 d11f      	RCALL __ANEGW1
00027a 87ea      	STD  Y+10,R30
00027b 87fb      	STD  Y+10+1,R31
00027c e24d      	LDI  R20,LOW(45)
                 _0x2000049:
00027d 3040      	CPI  R20,0
00027e f011      	BREQ _0x200004A
00027f 5f1f      	SUBI R17,-LOW(1)
000280 c001      	RJMP _0x200004B
                 _0x200004A:
000281 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
000282 c006      	RJMP _0x200004C
                 _0x2000048:
000283 d0f1      	RCALL SUBOPT_0x4
000284 89a8      	LDD  R26,Y+16
000285 89b9      	LDD  R27,Y+16+1
000286 d0dc      	RCALL SUBOPT_0x1
000287 87ea      	STD  Y+10,R30
000288 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
000289 fd00      	SBRC R16,0
00028a c010      	RJMP _0x200004D
                 _0x200004E:
00028b 1715      	CP   R17,R21
00028c f470      	BRSH _0x2000050
00028d ff07      	SBRS R16,7
00028e c008      	RJMP _0x2000051
00028f ff02      	SBRS R16,2
000290 c004      	RJMP _0x2000052
000291 7f0b      	ANDI R16,LOW(251)
000292 2f24      	MOV  R18,R20
000293 5011      	SUBI R17,LOW(1)
000294 c001      	RJMP _0x2000053
                 _0x2000052:
000295 e320      	LDI  R18,LOW(48)
                 _0x2000053:
000296 c001      	RJMP _0x2000054
                 _0x2000051:
000297 e220      	LDI  R18,LOW(32)
                 _0x2000054:
000298 d0d5      	RCALL SUBOPT_0x3
000299 5051      	SUBI R21,LOW(1)
00029a cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
00029b 2f31      	MOV  R19,R17
00029c ff01      	SBRS R16,1
00029d c016      	RJMP _0x2000055
                 _0x2000056:
00029e 3030      	CPI  R19,0
00029f f099      	BREQ _0x2000058
0002a0 ff03      	SBRS R16,3
0002a1 c006      	RJMP _0x2000059
0002a2 81ee      	LDD  R30,Y+6
0002a3 81ff      	LDD  R31,Y+6+1
0002a4 9125      	LPM  R18,Z+
0002a5 83ee      	STD  Y+6,R30
0002a6 83ff      	STD  Y+6+1,R31
0002a7 c005      	RJMP _0x200005A
                 _0x2000059:
0002a8 81ae      	LDD  R26,Y+6
0002a9 81bf      	LDD  R27,Y+6+1
0002aa 912d      	LD   R18,X+
0002ab 83ae      	STD  Y+6,R26
0002ac 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002ad d0c0      	RCALL SUBOPT_0x3
0002ae 3050      	CPI  R21,0
0002af f009      	BREQ _0x200005B
0002b0 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0002b1 5031      	SUBI R19,LOW(1)
0002b2 cfeb      	RJMP _0x2000056
                 _0x2000058:
0002b3 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002b4 e320      	LDI  R18,LOW(48)
0002b5 81ee      	LDD  R30,Y+6
0002b6 81ff      	LDD  R31,Y+6+1
0002b7 d166      	RCALL __GETW1PF
0002b8 87e8      	STD  Y+8,R30
0002b9 87f9      	STD  Y+8+1,R31
0002ba 81ee      	LDD  R30,Y+6
0002bb 81ff      	LDD  R31,Y+6+1
0002bc 9632      	ADIW R30,2
0002bd 83ee      	STD  Y+6,R30
0002be 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002bf 85e8      	LDD  R30,Y+8
0002c0 85f9      	LDD  R31,Y+8+1
0002c1 85aa      	LDD  R26,Y+10
0002c2 85bb      	LDD  R27,Y+10+1
0002c3 17ae      	CP   R26,R30
0002c4 07bf      	CPC  R27,R31
0002c5 f050      	BRLO _0x2000062
0002c6 5f2f      	SUBI R18,-LOW(1)
0002c7 85a8      	LDD  R26,Y+8
0002c8 85b9      	LDD  R27,Y+8+1
0002c9 85ea      	LDD  R30,Y+10
0002ca 85fb      	LDD  R31,Y+10+1
0002cb 1bea      	SUB  R30,R26
0002cc 0bfb      	SBC  R31,R27
0002cd 87ea      	STD  Y+10,R30
0002ce 87fb      	STD  Y+10+1,R31
0002cf cfef      	RJMP _0x2000060
                 _0x2000062:
0002d0 332a      	CPI  R18,58
0002d1 f028      	BRLO _0x2000063
0002d2 ff03      	SBRS R16,3
0002d3 c002      	RJMP _0x2000064
0002d4 5f29      	SUBI R18,-LOW(7)
0002d5 c001      	RJMP _0x2000065
                 _0x2000064:
0002d6 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002d7 fd04      	SBRC R16,4
0002d8 c019      	RJMP _0x2000067
0002d9 3321      	CPI  R18,49
0002da f420      	BRSH _0x2000069
0002db 85a8      	LDD  R26,Y+8
0002dc 85b9      	LDD  R27,Y+8+1
0002dd 9711      	SBIW R26,1
0002de f409      	BRNE _0x2000068
                 _0x2000069:
0002df c009      	RJMP _0x20000D3
                 _0x2000068:
0002e0 1753      	CP   R21,R19
0002e1 f010      	BRLO _0x200006D
0002e2 ff00      	SBRS R16,0
0002e3 c001      	RJMP _0x200006E
                 _0x200006D:
0002e4 c011      	RJMP _0x200006C
                 _0x200006E:
0002e5 e220      	LDI  R18,LOW(32)
0002e6 ff07      	SBRS R16,7
0002e7 c00a      	RJMP _0x200006F
0002e8 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0002e9 6100      	ORI  R16,LOW(16)
0002ea ff02      	SBRS R16,2
0002eb c006      	RJMP _0x2000070
0002ec 7f0b      	ANDI R16,LOW(251)
0002ed 934a      	ST   -Y,R20
0002ee d08c      	RCALL SUBOPT_0x5
0002ef 3050      	CPI  R21,0
0002f0 f009      	BREQ _0x2000071
0002f1 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0002f2 d07b      	RCALL SUBOPT_0x3
0002f3 3050      	CPI  R21,0
0002f4 f009      	BREQ _0x2000072
0002f5 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0002f6 5031      	SUBI R19,LOW(1)
0002f7 85a8      	LDD  R26,Y+8
0002f8 85b9      	LDD  R27,Y+8+1
0002f9 9712      	SBIW R26,2
0002fa f008      	BRLO _0x200005F
0002fb cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002fc ff00      	SBRS R16,0
0002fd c007      	RJMP _0x2000073
                 _0x2000074:
0002fe 3050      	CPI  R21,0
0002ff f029      	BREQ _0x2000076
000300 5051      	SUBI R21,LOW(1)
000301 e2e0      	LDI  R30,LOW(32)
000302 93ea      	ST   -Y,R30
000303 d077      	RCALL SUBOPT_0x5
000304 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000305 e010      	LDI  R17,LOW(0)
                 _0x2000021:
000306 ceed      	RJMP _0x200001C
                 _0x200001E:
000307 85ac      	LDD  R26,Y+12
000308 85bd      	LDD  R27,Y+12+1
000309 91ed      	LD   R30,X+
00030a 91fd      	LD   R31,X+
00030b d086      	RCALL __LOADLOCR6
00030c 9664      	ADIW R28,20
00030d 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00030e 92ff      	PUSH R15
00030f 2ef8      	MOV  R15,R24
000310 9726      	SBIW R28,6
000311 d079      	RCALL __SAVELOCR6
000312 01fe      	MOVW R30,R28
                +
000313 2400     +CLR R0
000314 0def     +ADD R30 , R15
000315 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000316 8546     +LDD R20 , Z + 14
000317 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000318 2e04      	MOV  R0,R20
000319 2a05      	OR   R0,R21
00031a f419      	BRNE _0x2000078
00031b efef      	LDI  R30,LOW(65535)
00031c efff      	LDI  R31,HIGH(65535)
00031d c023      	RJMP _0x2060001
                 _0x2000078:
00031e 01de      	MOVW R26,R28
00031f 9618      	ADIW R26,8
                +
000320 2400     +CLR R0
000321 0daf     +ADD R26 , R15
000322 1db0     +ADC R27 , R0
                 	__ADDW2R15
000323 018d      	MOVW R16,R26
                +
000324 8748     +STD Y + 8 , R20
000325 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000326 e0e0      	LDI  R30,LOW(0)
000327 87ea      	STD  Y+10,R30
000328 87eb      	STD  Y+10+1,R30
000329 01de      	MOVW R26,R28
00032a 961c      	ADIW R26,12
                +
00032b 2400     +CLR R0
00032c 0daf     +ADD R26 , R15
00032d 1db0     +ADC R27 , R0
                 	__ADDW2R15
00032e 91ed      	LD   R30,X+
00032f 91fd      	LD   R31,X+
000330 93fa      	ST   -Y,R31
000331 93ea      	ST   -Y,R30
000332 931a      	ST   -Y,R17
000333 930a      	ST   -Y,R16
000334 ebeb      	LDI  R30,LOW(_put_buff_G100)
000335 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000336 93fa      	ST   -Y,R31
000337 93ea      	ST   -Y,R30
000338 01de      	MOVW R26,R28
000339 961c      	ADIW R26,12
00033a deae      	RCALL __print_G100
00033b 019f      	MOVW R18,R30
00033c 85a8      	LDD  R26,Y+8
00033d 85b9      	LDD  R27,Y+8+1
00033e e0e0      	LDI  R30,LOW(0)
00033f 93ec      	ST   X,R30
000340 01f9      	MOVW R30,R18
                 _0x2060001:
000341 d050      	RCALL __LOADLOCR6
000342 962c      	ADIW R28,12
000343 90ff      	POP  R15
000344 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000345 93ba      	ST   -Y,R27
000346 93aa      	ST   -Y,R26
000347 91a9          ld   r26,y+
000348 91b9          ld   r27,y+
000349 27ee          clr  r30
00034a 27ff          clr  r31
                 strlen0:
00034b 916d          ld   r22,x+
00034c 2366          tst  r22
00034d f011          breq strlen1
00034e 9631          adiw r30,1
00034f cffb          rjmp strlen0
                 strlen1:
000350 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000351 93ba      	ST   -Y,R27
000352 93aa      	ST   -Y,R26
000353 27aa          clr  r26
000354 27bb          clr  r27
000355 91e9          ld   r30,y+
000356 91f9          ld   r31,y+
                 strlenf0:
000357 9005      	lpm  r0,z+
000358 2000          tst  r0
000359 f011          breq strlenf1
00035a 9611          adiw r26,1
00035b cffb          rjmp strlenf0
                 strlenf1:
00035c 01fd          movw r30,r26
00035d 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _test:
000304           	.BYTE 0x20
                 _ADC_value:
000324           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00035e 91e0 0078 	LDS  R30,120
000360 91f0 0079 	LDS  R31,120+1
000362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000363 9614      	ADIW R26,4
                +
000364 91ed     +LD R30 , X +
000365 91fc     +LD R31 , X
000366 9711     +SBIW R26 , 1
                 	__GETW1P
000367 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000368 91ed      	LD   R30,X+
000369 91fd      	LD   R31,X+
00036a 9631      	ADIW R30,1
00036b 93fe      	ST   -X,R31
00036c 93ee      	ST   -X,R30
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
00036e 932a      	ST   -Y,R18
00036f 85ad      	LDD  R26,Y+13
000370 85be      	LDD  R27,Y+13+1
000371 85ef      	LDD  R30,Y+15
000372 89f8      	LDD  R31,Y+15+1
000373 9509      	ICALL
000374 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
000375 89e8      	LDD  R30,Y+16
000376 89f9      	LDD  R31,Y+16+1
000377 9734      	SBIW R30,4
000378 8be8      	STD  Y+16,R30
000379 8bf9      	STD  Y+16+1,R31
00037a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
00037b 85ad      	LDD  R26,Y+13
00037c 85be      	LDD  R27,Y+13+1
00037d 85ef      	LDD  R30,Y+15
00037e 89f8      	LDD  R31,Y+15+1
00037f 9509      	ICALL
000380 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
000381 89a8      	LDD  R26,Y+16
000382 89b9      	LDD  R27,Y+16+1
000383 9614      	ADIW R26,4
000384 91ed      	LD   R30,X+
000385 91fd      	LD   R31,X+
000386 83ee      	STD  Y+6,R30
000387 83ff      	STD  Y+6+1,R31
000388 81ae      	LDD  R26,Y+6
000389 81bf      	LDD  R27,Y+6+1
00038a 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00038b 935a      	ST   -Y,R21
                 __SAVELOCR5:
00038c 934a      	ST   -Y,R20
                 __SAVELOCR4:
00038d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00038e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00038f 931a      	ST   -Y,R17
000390 930a      	ST   -Y,R16
000391 9508      	RET
                 
                 __LOADLOCR6:
000392 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000393 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000394 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000395 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000396 8119      	LDD  R17,Y+1
000397 8108      	LD   R16,Y
000398 9508      	RET
                 
                 __ANEGW1:
000399 95f1      	NEG  R31
00039a 95e1      	NEG  R30
00039b 40f0      	SBCI R31,0
00039c 9508      	RET
                 
                 __ANEGD1:
00039d 95f0      	COM  R31
00039e 9560      	COM  R22
00039f 9570      	COM  R23
0003a0 95e1      	NEG  R30
0003a1 4fff      	SBCI R31,-1
0003a2 4f6f      	SBCI R22,-1
0003a3 4f7f      	SBCI R23,-1
0003a4 9508      	RET
                 
                 __ANEGD2:
0003a5 95b0      	COM  R27
0003a6 9580      	COM  R24
0003a7 9590      	COM  R25
0003a8 95a1      	NEG  R26
0003a9 4fbf      	SBCI R27,-1
0003aa 4f8f      	SBCI R24,-1
0003ab 4f9f      	SBCI R25,-1
0003ac 9508      	RET
                 
                 __LSLB12:
0003ad 23ee      	TST  R30
0003ae 2e0e      	MOV  R0,R30
0003af 2fea      	MOV  R30,R26
0003b0 f019      	BREQ __LSLB12R
                 __LSLB12L:
0003b1 0fee      	LSL  R30
0003b2 940a      	DEC  R0
0003b3 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0003b4 9508      	RET
                 
                 __DIVW21U:
0003b5 2400      	CLR  R0
0003b6 2411      	CLR  R1
0003b7 e190      	LDI  R25,16
                 __DIVW21U1:
0003b8 0faa      	LSL  R26
0003b9 1fbb      	ROL  R27
0003ba 1c00      	ROL  R0
0003bb 1c11      	ROL  R1
0003bc 1a0e      	SUB  R0,R30
0003bd 0a1f      	SBC  R1,R31
0003be f418      	BRCC __DIVW21U2
0003bf 0e0e      	ADD  R0,R30
0003c0 1e1f      	ADC  R1,R31
0003c1 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0003c2 60a1      	SBR  R26,1
                 __DIVW21U3:
0003c3 959a      	DEC  R25
0003c4 f799      	BRNE __DIVW21U1
0003c5 01fd      	MOVW R30,R26
0003c6 01d0      	MOVW R26,R0
0003c7 9508      	RET
                 
                 __DIVW21:
0003c8 d03b      	RCALL __CHKSIGNW
0003c9 dfeb      	RCALL __DIVW21U
0003ca f40e      	BRTC __DIVW211
0003cb dfcd      	RCALL __ANEGW1
                 __DIVW211:
0003cc 9508      	RET
                 
                 __DIVD21U:
0003cd 933f      	PUSH R19
0003ce 934f      	PUSH R20
0003cf 935f      	PUSH R21
0003d0 2400      	CLR  R0
0003d1 2411      	CLR  R1
0003d2 01a0      	MOVW R20,R0
0003d3 e230      	LDI  R19,32
                 __DIVD21U1:
0003d4 0faa      	LSL  R26
0003d5 1fbb      	ROL  R27
0003d6 1f88      	ROL  R24
0003d7 1f99      	ROL  R25
0003d8 1c00      	ROL  R0
0003d9 1c11      	ROL  R1
0003da 1f44      	ROL  R20
0003db 1f55      	ROL  R21
0003dc 1a0e      	SUB  R0,R30
0003dd 0a1f      	SBC  R1,R31
0003de 0b46      	SBC  R20,R22
0003df 0b57      	SBC  R21,R23
0003e0 f428      	BRCC __DIVD21U2
0003e1 0e0e      	ADD  R0,R30
0003e2 1e1f      	ADC  R1,R31
0003e3 1f46      	ADC  R20,R22
0003e4 1f57      	ADC  R21,R23
0003e5 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003e6 60a1      	SBR  R26,1
                 __DIVD21U3:
0003e7 953a      	DEC  R19
0003e8 f759      	BRNE __DIVD21U1
0003e9 01fd      	MOVW R30,R26
0003ea 01bc      	MOVW R22,R24
0003eb 01d0      	MOVW R26,R0
0003ec 01ca      	MOVW R24,R20
0003ed 915f      	POP  R21
0003ee 914f      	POP  R20
0003ef 913f      	POP  R19
0003f0 9508      	RET
                 
                 __DIVD21:
0003f1 d020      	RCALL __CHKSIGND
0003f2 dfda      	RCALL __DIVD21U
0003f3 f40e      	BRTC __DIVD211
0003f4 dfa8      	RCALL __ANEGD1
                 __DIVD211:
0003f5 9508      	RET
                 
                 __MODW21:
0003f6 94e8      	CLT
0003f7 ffb7      	SBRS R27,7
0003f8 c004      	RJMP __MODW211
0003f9 95b1      	NEG  R27
0003fa 95a1      	NEG  R26
0003fb 40b0      	SBCI R27,0
0003fc 9468      	SET
                 __MODW211:
0003fd fdf7      	SBRC R31,7
0003fe df9a      	RCALL __ANEGW1
0003ff dfb5      	RCALL __DIVW21U
000400 01fd      	MOVW R30,R26
000401 f40e      	BRTC __MODW212
000402 df96      	RCALL __ANEGW1
                 __MODW212:
000403 9508      	RET
                 
                 __CHKSIGNW:
000404 94e8      	CLT
000405 fff7      	SBRS R31,7
000406 c002      	RJMP __CHKSW1
000407 df91      	RCALL __ANEGW1
000408 9468      	SET
                 __CHKSW1:
000409 ffb7      	SBRS R27,7
00040a c006      	RJMP __CHKSW2
00040b 95b1      	NEG  R27
00040c 95a1      	NEG  R26
00040d 40b0      	SBCI R27,0
00040e f800      	BLD  R0,0
00040f 9403      	INC  R0
000410 fa00      	BST  R0,0
                 __CHKSW2:
000411 9508      	RET
                 
                 __CHKSIGND:
000412 94e8      	CLT
000413 ff77      	SBRS R23,7
000414 c002      	RJMP __CHKSD1
000415 df87      	RCALL __ANEGD1
000416 9468      	SET
                 __CHKSD1:
000417 ff97      	SBRS R25,7
000418 c004      	RJMP __CHKSD2
000419 df8b      	RCALL __ANEGD2
00041a f800      	BLD  R0,0
00041b 9403      	INC  R0
00041c fa00      	BST  R0,0
                 __CHKSD2:
00041d 9508      	RET
                 
                 __GETW1PF:
00041e 9005      	LPM  R0,Z+
00041f 91f4      	LPM  R31,Z
000420 2de0      	MOV  R30,R0
000421 9508      	RET
                 
                 __PUTPARD1:
000422 937a      	ST   -Y,R23
000423 936a      	ST   -Y,R22
000424 93fa      	ST   -Y,R31
000425 93ea      	ST   -Y,R30
000426 9508      	RET
                 
                 __ROUND_REPACK:
000427 2355      	TST  R21
000428 f442      	BRPL __REPACK
000429 3850      	CPI  R21,0x80
00042a f411      	BRNE __ROUND_REPACK0
00042b ffe0      	SBRS R30,0
00042c c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00042d 9631      	ADIW R30,1
00042e 1f69      	ADC  R22,R25
00042f 1f79      	ADC  R23,R25
000430 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000431 e850      	LDI  R21,0x80
000432 2757      	EOR  R21,R23
000433 f411      	BRNE __REPACK0
000434 935f      	PUSH R21
000435 c03c      	RJMP __ZERORES
                 __REPACK0:
000436 3f5f      	CPI  R21,0xFF
000437 f031      	BREQ __REPACK1
000438 0f66      	LSL  R22
000439 0c00      	LSL  R0
00043a 9557      	ROR  R21
00043b 9567      	ROR  R22
00043c 2f75      	MOV  R23,R21
00043d 9508      	RET
                 __REPACK1:
00043e 935f      	PUSH R21
00043f 2000      	TST  R0
000440 f00a      	BRMI __REPACK2
000441 c03b      	RJMP __MAXRES
                 __REPACK2:
000442 c034      	RJMP __MINRES
                 
                 __UNPACK:
000443 e850      	LDI  R21,0x80
000444 2e19      	MOV  R1,R25
000445 2215      	AND  R1,R21
000446 0f88      	LSL  R24
000447 1f99      	ROL  R25
000448 2795      	EOR  R25,R21
000449 0f55      	LSL  R21
00044a 9587      	ROR  R24
                 
                 __UNPACK1:
00044b e850      	LDI  R21,0x80
00044c 2e07      	MOV  R0,R23
00044d 2205      	AND  R0,R21
00044e 0f66      	LSL  R22
00044f 1f77      	ROL  R23
000450 2775      	EOR  R23,R21
000451 0f55      	LSL  R21
000452 9567      	ROR  R22
000453 9508      	RET
                 
                 __CDF1U:
000454 9468      	SET
000455 c001      	RJMP __CDF1U0
                 __CDF1:
000456 94e8      	CLT
                 __CDF1U0:
000457 9730      	SBIW R30,0
000458 4060      	SBCI R22,0
000459 4070      	SBCI R23,0
00045a f0b1      	BREQ __CDF10
00045b 2400      	CLR  R0
00045c f026      	BRTS __CDF11
00045d 2377      	TST  R23
00045e f412      	BRPL __CDF11
00045f 9400      	COM  R0
000460 df3c      	RCALL __ANEGD1
                 __CDF11:
000461 2e17      	MOV  R1,R23
000462 e17e      	LDI  R23,30
000463 2011      	TST  R1
                 __CDF12:
000464 f032      	BRMI __CDF13
000465 957a      	DEC  R23
000466 0fee      	LSL  R30
000467 1fff      	ROL  R31
000468 1f66      	ROL  R22
000469 1c11      	ROL  R1
00046a cff9      	RJMP __CDF12
                 __CDF13:
00046b 2fef      	MOV  R30,R31
00046c 2ff6      	MOV  R31,R22
00046d 2d61      	MOV  R22,R1
00046e 935f      	PUSH R21
00046f dfc1      	RCALL __REPACK
000470 915f      	POP  R21
                 __CDF10:
000471 9508      	RET
                 
                 __ZERORES:
000472 27ee      	CLR  R30
000473 27ff      	CLR  R31
000474 01bf      	MOVW R22,R30
000475 915f      	POP  R21
000476 9508      	RET
                 
                 __MINRES:
000477 efef      	SER  R30
000478 efff      	SER  R31
000479 e76f      	LDI  R22,0x7F
00047a ef7f      	SER  R23
00047b 915f      	POP  R21
00047c 9508      	RET
                 
                 __MAXRES:
00047d efef      	SER  R30
00047e efff      	SER  R31
00047f e76f      	LDI  R22,0x7F
000480 e77f      	LDI  R23,0x7F
000481 915f      	POP  R21
000482 9508      	RET
                 
                 __MULF12:
000483 935f      	PUSH R21
000484 dfbe      	RCALL __UNPACK
000485 3870      	CPI  R23,0x80
000486 f359      	BREQ __ZERORES
000487 3890      	CPI  R25,0x80
000488 f349      	BREQ __ZERORES
000489 2401      	EOR  R0,R1
00048a 9408      	SEC
00048b 1f79      	ADC  R23,R25
00048c f423      	BRVC __MULF124
00048d f324      	BRLT __ZERORES
                 __MULF125:
00048e 2000      	TST  R0
00048f f33a      	BRMI __MINRES
000490 cfec      	RJMP __MAXRES
                 __MULF124:
000491 920f      	PUSH R0
000492 931f      	PUSH R17
000493 932f      	PUSH R18
000494 933f      	PUSH R19
000495 934f      	PUSH R20
000496 2711      	CLR  R17
000497 2722      	CLR  R18
000498 2799      	CLR  R25
000499 9f68      	MUL  R22,R24
00049a 01a0      	MOVW R20,R0
00049b 9f8f      	MUL  R24,R31
00049c 2d30      	MOV  R19,R0
00049d 0d41      	ADD  R20,R1
00049e 1f59      	ADC  R21,R25
00049f 9f6b      	MUL  R22,R27
0004a0 0d30      	ADD  R19,R0
0004a1 1d41      	ADC  R20,R1
0004a2 1f59      	ADC  R21,R25
0004a3 9f8e      	MUL  R24,R30
0004a4 d027      	RCALL __MULF126
0004a5 9fbf      	MUL  R27,R31
0004a6 d025      	RCALL __MULF126
0004a7 9f6a      	MUL  R22,R26
0004a8 d023      	RCALL __MULF126
0004a9 9fbe      	MUL  R27,R30
0004aa d01d      	RCALL __MULF127
0004ab 9faf      	MUL  R26,R31
0004ac d01b      	RCALL __MULF127
0004ad 9fae      	MUL  R26,R30
0004ae 0d11      	ADD  R17,R1
0004af 1f29      	ADC  R18,R25
0004b0 1f39      	ADC  R19,R25
0004b1 1f49      	ADC  R20,R25
0004b2 1f59      	ADC  R21,R25
0004b3 2fe3      	MOV  R30,R19
0004b4 2ff4      	MOV  R31,R20
0004b5 2f65      	MOV  R22,R21
0004b6 2f52      	MOV  R21,R18
0004b7 914f      	POP  R20
0004b8 913f      	POP  R19
0004b9 912f      	POP  R18
0004ba 911f      	POP  R17
0004bb 900f      	POP  R0
0004bc 2366      	TST  R22
0004bd f02a      	BRMI __MULF122
0004be 0f55      	LSL  R21
0004bf 1fee      	ROL  R30
0004c0 1fff      	ROL  R31
0004c1 1f66      	ROL  R22
0004c2 c002      	RJMP __MULF123
                 __MULF122:
0004c3 9573      	INC  R23
0004c4 f24b      	BRVS __MULF125
                 __MULF123:
0004c5 df61      	RCALL __ROUND_REPACK
0004c6 915f      	POP  R21
0004c7 9508      	RET
                 
                 __MULF127:
0004c8 0d10      	ADD  R17,R0
0004c9 1d21      	ADC  R18,R1
0004ca 1f39      	ADC  R19,R25
0004cb c002      	RJMP __MULF128
                 __MULF126:
0004cc 0d20      	ADD  R18,R0
0004cd 1d31      	ADC  R19,R1
                 __MULF128:
0004ce 1f49      	ADC  R20,R25
0004cf 1f59      	ADC  R21,R25
0004d0 9508      	RET
                 
                 __DIVF21:
0004d1 935f      	PUSH R21
0004d2 df70      	RCALL __UNPACK
0004d3 3870      	CPI  R23,0x80
0004d4 f421      	BRNE __DIVF210
0004d5 2011      	TST  R1
                 __DIVF211:
0004d6 f40a      	BRPL __DIVF219
0004d7 cf9f      	RJMP __MINRES
                 __DIVF219:
0004d8 cfa4      	RJMP __MAXRES
                 __DIVF210:
0004d9 3890      	CPI  R25,0x80
0004da f409      	BRNE __DIVF218
                 __DIVF217:
0004db cf96      	RJMP __ZERORES
                 __DIVF218:
0004dc 2401      	EOR  R0,R1
0004dd 9408      	SEC
0004de 0b97      	SBC  R25,R23
0004df f41b      	BRVC __DIVF216
0004e0 f3d4      	BRLT __DIVF217
0004e1 2000      	TST  R0
0004e2 cff3      	RJMP __DIVF211
                 __DIVF216:
0004e3 2f79      	MOV  R23,R25
0004e4 931f      	PUSH R17
0004e5 932f      	PUSH R18
0004e6 933f      	PUSH R19
0004e7 934f      	PUSH R20
0004e8 2411      	CLR  R1
0004e9 2711      	CLR  R17
0004ea 2722      	CLR  R18
0004eb 2733      	CLR  R19
0004ec 01a9      	MOVW R20,R18
0004ed e290      	LDI  R25,32
                 __DIVF212:
0004ee 17ae      	CP   R26,R30
0004ef 07bf      	CPC  R27,R31
0004f0 0786      	CPC  R24,R22
0004f1 0741      	CPC  R20,R17
0004f2 f030      	BRLO __DIVF213
0004f3 1bae      	SUB  R26,R30
0004f4 0bbf      	SBC  R27,R31
0004f5 0b86      	SBC  R24,R22
0004f6 0b41      	SBC  R20,R17
0004f7 9408      	SEC
0004f8 c001      	RJMP __DIVF214
                 __DIVF213:
0004f9 9488      	CLC
                 __DIVF214:
0004fa 1f55      	ROL  R21
0004fb 1f22      	ROL  R18
0004fc 1f33      	ROL  R19
0004fd 1c11      	ROL  R1
0004fe 1faa      	ROL  R26
0004ff 1fbb      	ROL  R27
000500 1f88      	ROL  R24
000501 1f44      	ROL  R20
000502 959a      	DEC  R25
000503 f751      	BRNE __DIVF212
000504 01f9      	MOVW R30,R18
000505 2d61      	MOV  R22,R1
000506 914f      	POP  R20
000507 913f      	POP  R19
000508 912f      	POP  R18
000509 911f      	POP  R17
00050a 2366      	TST  R22
00050b f032      	BRMI __DIVF215
00050c 0f55      	LSL  R21
00050d 1fee      	ROL  R30
00050e 1fff      	ROL  R31
00050f 1f66      	ROL  R22
000510 957a      	DEC  R23
000511 f24b      	BRVS __DIVF217
                 __DIVF215:
000512 df14      	RCALL __ROUND_REPACK
000513 915f      	POP  R21
000514 9508      	RET
                 
                 _delay_ms:
000515 9610      	adiw r26,0
000516 f039      	breq __delay_ms1
                 __delay_ms0:
000517 95a8      	wdr
                +
000518 ed80     +LDI R24 , LOW ( 0x7D0 )
000519 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00051a 9701     +SBIW R24 , 1
00051b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00051c 9711      	sbiw r26,1
00051d f7c9      	brne __delay_ms0
                 __delay_ms1:
00051e 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  62 r1 :  28 r2 :   0 r3 :   1 r4 :   1 r5 :   3 r6 :   3 r7 :   1 
r8 :   1 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  52 r17:  41 r18:  55 r19:  29 r20:  38 r21:  64 r22:  47 r23:  34 
r24:  28 r25:  33 r26: 120 r27:  60 r28:  17 r29:   1 r30: 228 r31: 105 
x  :  41 y  : 152 z  :  16 
Registers used: 28 out of 35 (80.0%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  14 
adiw  :  25 and   :   2 andi  :   6 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  24 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   2 brmi  :   6 brne  :  35 brpl  :   4 brsh  :   2 brtc  :   3 
brts  :   1 brvc  :   2 brvs  :   3 bset  :   0 bst   :   2 call  :   0 
cbi   :   3 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :  28 cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   7 
cp    :   7 cpc   :   8 cpi   :  38 cpse  :   0 dec   :   7 des   :   0 
eor   :   5 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   3 jmp   :  27 ld    :  35 ldd   :  66 ldi   : 125 
lds   :  15 lpm   :  14 lsl   :  12 lsr   :   0 mov   :  41 movw  :  52 
mul   :  10 muls  :   0 mulsu :   0 neg   :   8 nop   :   0 or    :   4 
ori   :  13 out   :  13 pop   :  19 push  :  18 rcall :  82 ret   :  43 
reti  :   1 rjmp  :  81 rol   :  29 ror   :   4 sbc   :   9 sbci  :  14 
sbi   :   2 sbic  :   0 sbis  :   0 sbiw  :  23 sbr   :   2 sbrc  :   3 
sbrs  :  16 sec   :   3 seh   :   0 sei   :   2 sen   :   0 ser   :   5 
ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  66 std   :  30 sts   :  15 sub   :   4 subi  :  17 swap  :   0 
tst   :  14 wdr   :   1 
Instructions used: 74 out of 116 (63.8%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000a3e   2568     54   2622   32768   8.0%
[.dseg] 0x000100 0x000328      0     40     40    2048   2.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings

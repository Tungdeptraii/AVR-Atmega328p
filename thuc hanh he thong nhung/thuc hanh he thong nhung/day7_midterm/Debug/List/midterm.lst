
AVRASM ver. 2.1.30  D:\thuc hanh he thong nhung\day7_midterm\Debug\List\midterm.asm Thu Apr 13 10:31:32 2023

D:\thuc hanh he thong nhung\day7_midterm\Debug\List\midterm.asm(1420): warning: Register r3 already defined by the .DEF directive
D:\thuc hanh he thong nhung\day7_midterm\Debug\List\midterm.asm(1421): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _n=R3
                 	.DEF _n_msb=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0057 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x0:
000034 6947
000035 2061
000036 7274
000037 2069      	.DB  0x47,0x69,0x61,0x20,0x74,0x72,0x69,0x20
000038 4441
000039 3a43
00003a 0020
00003b 5320      	.DB  0x41,0x44,0x43,0x3A,0x20,0x0,0x20,0x53
00003c 7379
00003d 6574
00003e 206d
00003f 6c61      	.DB  0x79,0x73,0x74,0x65,0x6D,0x20,0x61,0x6C
000040 7261
000041 2e6d
000042 0020
000043 4120      	.DB  0x61,0x72,0x6D,0x2E,0x20,0x0,0x20,0x41
000044 616c
000045 6d72
000046 4f20
000047 6576      	.DB  0x6C,0x61,0x72,0x6D,0x20,0x4F,0x76,0x65
000048 2e72
000049 0020      	.DB  0x72,0x2E,0x20,0x0
                 
                 __GLOBAL_INI_TBL:
00004a 000e      	.DW  0x0E
00004b 0300      	.DW  _0x1A
00004c 0068      	.DW  _0x0*2
                 
00004d 0002      	.DW  0x02
00004e 030e      	.DW  _0x1A+14
00004f 0074      	.DW  _0x0*2+12
                 
000050 0010      	.DW  0x10
000051 0310      	.DW  _0x1A+16
000052 0076      	.DW  _0x0*2+14
                 
000053 000e      	.DW  0x0E
000054 0320      	.DW  _0x1A+32
000055 0086      	.DW  _0x0*2+30
                 
                 _0xFFFFFFFF:
000056 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000057 94f8      	CLI
000058 27ee      	CLR  R30
000059 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005a e0f1      	LDI  R31,1
00005b bff5      	OUT  MCUCR,R31
00005c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005d e08d      	LDI  R24,(14-2)+1
00005e e0a2      	LDI  R26,2
00005f 27bb      	CLR  R27
                 __CLEAR_REG:
000060 93ed      	ST   X+,R30
000061 958a      	DEC  R24
000062 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000063 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000064 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000065 e0a0      	LDI  R26,LOW(__SRAM_START)
000066 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000067 93ed      	ST   X+,R30
000068 9701      	SBIW R24,1
000069 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006a e9e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006c 9185      	LPM  R24,Z+
00006d 9195      	LPM  R25,Z+
00006e 9700      	SBIW R24,0
00006f f061      	BREQ __GLOBAL_INI_END
000070 91a5      	LPM  R26,Z+
000071 91b5      	LPM  R27,Z+
000072 9005      	LPM  R0,Z+
000073 9015      	LPM  R1,Z+
000074 01bf      	MOVW R22,R30
000075 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000076 9005      	LPM  R0,Z+
000077 920d      	ST   X+,R0
000078 9701      	SBIW R24,1
000079 f7e1      	BRNE __GLOBAL_INI_LOOP
00007a 01fb      	MOVW R30,R22
00007b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00007c e0e0      	LDI  R30,__GPIOR0_INIT
00007d bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007e efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007f bfed      	OUT  SPL,R30
000080 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000081 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000082 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000083 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000084 940c 00d7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;void putchar(unsigned char data){
                 ; 0000 000E void putchar(unsigned char data){
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 000F while(!(UCSR0A & 0b00100000));   //cho thanh ghi du lieu EMPTY
000086 931a      	ST   -Y,R17
000087 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x3:
000088 91e0 00c0 	LDS  R30,192
00008a 72e0      	ANDI R30,LOW(0x20)
00008b f3e1      	BREQ _0x3
                 ; 0000 0010 UDR0 = data;
00008c 9310 00c6 	STS  198,R17
                 ; 0000 0011 }
00008e 9119      	LD   R17,Y+
00008f 9508      	RET
                 ; .FEND
                 ;void putstring(unsigned char *str){
                 ; 0000 0013 void putstring(unsigned char *str){
                 _putstring:
                 ; .FSTART _putstring
                 ; 0000 0014 while(*str){
000090 931a      	ST   -Y,R17
000091 930a      	ST   -Y,R16
000092 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x6:
000093 01d8      	MOVW R26,R16
000094 91ec      	LD   R30,X
000095 30e0      	CPI  R30,0
000096 f059      	BREQ _0x8
                 ; 0000 0015 putchar(*str);
000097 91ac      	LD   R26,X
000098 dfed      	RCALL _putchar
                 ; 0000 0016 //if see the line feed, add carriage return
                 ; 0000 0017 if(*str == '\n')
000099 01d8      	MOVW R26,R16
00009a 91ac      	LD   R26,X
00009b 30aa      	CPI  R26,LOW(0xA)
00009c f411      	BRNE _0x9
                 ; 0000 0018 putchar('\r');
00009d e0ad      	LDI  R26,LOW(13)
00009e dfe7      	RCALL _putchar
                 ; 0000 0019 str++;
                 _0x9:
                +
00009f 5f0f     +SUBI R16 , LOW ( - 1 )
0000a0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 001A }
0000a1 cff1      	RJMP _0x6
                 _0x8:
                 ; 0000 001B }
0000a2 9109      	LD   R16,Y+
0000a3 9119      	LD   R17,Y+
0000a4 9508      	RET
                 ; .FEND
                 ;void put_int(unsigned int value){
                 ; 0000 001D void put_int(unsigned int value){
                 _put_int:
                 ; .FSTART _put_int
                 ; 0000 001E unsigned char buf[8];
                 ; 0000 001F int index = 0,i,j;
                 ; 0000 0020 j = value;
0000a5 93ba      	ST   -Y,R27
0000a6 93aa      	ST   -Y,R26
0000a7 9728      	SBIW R28,8
0000a8 d0a0      	RCALL __SAVELOCR6
                 ;	value -> Y+14
                 ;	buf -> Y+6
                 ;	index -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
0000a9 e000     +LDI R16 , LOW ( 0 )
0000aa e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0000ab 854e     +LDD R20 , Y + 14
0000ac 855f     +LDD R21 , Y + 14 + 1
                 	__GETWRS 20,21,14
                 ; 0000 0021 do{
                 _0xB:
                 ; 0000 0022 buf[index] = j%10 + 48;     //chuyen gia tri sang ki tu
0000ad 01f8      	MOVW R30,R16
0000ae 01de      	MOVW R26,R28
0000af 9616      	ADIW R26,6
0000b0 0fea      	ADD  R30,R26
0000b1 1ffb      	ADC  R31,R27
0000b2 01bf      	MOVW R22,R30
0000b3 01da      	MOVW R26,R20
0000b4 e0ea      	LDI  R30,LOW(10)
0000b5 e0f0      	LDI  R31,HIGH(10)
0000b6 d0bc      	RCALL __MODW21
0000b7 5de0      	SUBI R30,-LOW(48)
0000b8 01db      	MOVW R26,R22
0000b9 93ec      	ST   X,R30
                 ; 0000 0023 j = j/10;
0000ba 01da      	MOVW R26,R20
0000bb e0ea      	LDI  R30,LOW(10)
0000bc e0f0      	LDI  R31,HIGH(10)
0000bd d0b0      	RCALL __DIVW21
0000be 01af      	MOVW R20,R30
                 ; 0000 0024 index += 1;
                +
0000bf 5f0f     +SUBI R16 , LOW ( - 1 )
0000c0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0025 }
                 ; 0000 0026 while (j);
0000c1 2e04      	MOV  R0,R20
0000c2 2a05      	OR   R0,R21
0000c3 f749      	BRNE _0xB
                 ; 0000 0027 
                 ; 0000 0028 for(i = index; i>0; i--)
0000c4 0198      	MOVW R18,R16
                 _0xE:
0000c5 2400      	CLR  R0
0000c6 1602      	CP   R0,R18
0000c7 0603      	CPC  R0,R19
0000c8 f45c      	BRGE _0xF
                 ; 0000 0029 putchar(buf[i-1]);
0000c9 01f9      	MOVW R30,R18
0000ca 9731      	SBIW R30,1
0000cb 01de      	MOVW R26,R28
0000cc 9616      	ADIW R26,6
0000cd 0fae      	ADD  R26,R30
0000ce 1fbf      	ADC  R27,R31
0000cf 91ac      	LD   R26,X
0000d0 dfb5      	RCALL _putchar
                +
0000d1 5021     +SUBI R18 , LOW ( 1 )
0000d2 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
0000d3 cff1      	RJMP _0xE
                 _0xF:
                 ; 0000 002A }
0000d4 d07b      	RCALL __LOADLOCR6
0000d5 9660      	ADIW R28,16
0000d6 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 002D {
                 _main:
                 ; .FSTART _main
                 ; 0000 002E DDRD |= 0b01000000;             //Dat PORTD.6 la OUT
0000d7 9a56      	SBI  0xA,6
                 ; 0000 002F PORTD &= 0b10111111;
0000d8 985e      	CBI  0xB,6
                 ; 0000 0030 DDRD.6 = 1;
0000d9 9a56      	SBI  0xA,6
                 ; 0000 0031 PORTD.6 = 0;
0000da 985e      	CBI  0xB,6
                 ; 0000 0032 
                 ; 0000 0033 //tinh gia tri baud rate roi dua vao thanh ghi UBRRn
                 ; 0000 0034 n = 8;   // n = 16M/(16*115200)-1 = 8
0000db e0e8      	LDI  R30,LOW(8)
0000dc e0f0      	LDI  R31,HIGH(8)
                +
0000dd 2e3e     +MOV R3 , R30
0000de 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
                 ; 0000 0035 UBRR0H = n>>8;
                +
0000df 2fef     +MOV R30 , R31
0000e0 27ff     +CLR R31
0000e1 fde7     +SBRC R30 , 7
0000e2 efff     +SER R31
                 	__ASRW8
0000e3 93e0 00c5 	STS  197,R30
                 ; 0000 0036 UBRR0L = n;
0000e5 9230 00c4 	STS  196,R3
                 ; 0000 0037 //cau hinh che do truyen, khung ban tin bang thanh ghi UCSRnC
                 ; 0000 0038 UCSR0C = 0b00000110;                //truyen ko dong bo, 8 data bit, 1 stop bit, no parity
0000e7 e0e6      	LDI  R30,LOW(6)
0000e8 93e0 00c2 	STS  194,R30
                 ; 0000 0039 //cho phep ca 2 chieu truyen nhan, cho phep ngat nhan du lieu (RX interrupt)
                 ; 0000 003A UCSR0B = 0b10011000;
0000ea e9e8      	LDI  R30,LOW(152)
0000eb 93e0 00c1 	STS  193,R30
                 ; 0000 003B 
                 ; 0000 003C //Select AVCC as reference voltage, ADC input is AD5(PC5)
                 ; 0000 003D ADMUX = 0b01000101;
0000ed e4e5      	LDI  R30,LOW(69)
0000ee 93e0 007c 	STS  124,R30
                 ; 0000 003E //Enable ADC, ADC clock = 125kHz
                 ; 0000 003F ADCSRA = 0b10000111;
0000f0 e8e7      	LDI  R30,LOW(135)
0000f1 93e0 007a 	STS  122,R30
                 ; 0000 0040 //Disable Digital Input function of AD5 pin (PC5)
                 ; 0000 0041 DIDR0 |= (ADC5D << 1);
0000f3 d04d      	RCALL SUBOPT_0x0
                 ; 0000 0042 //Wait for the ADC circuit stable
                 ; 0000 0043 delay_ms(10);
                 ; 0000 0044 
                 ; 0000 0045 while (1)
                 _0x14:
                 ; 0000 0046 {
                 ; 0000 0047 // Please'/ write your application code here
                 ; 0000 0048 
                 ; 0000 0049 //Update the ADC input
                 ; 0000 004A ADMUX = 0b01000101;
0000f4 e4e5      	LDI  R30,LOW(69)
0000f5 93e0 007c 	STS  124,R30
                 ; 0000 004B //Disable Digital input function
                 ; 0000 004C DIDR0 |= (ADC5D << 1);
0000f7 d049      	RCALL SUBOPT_0x0
                 ; 0000 004D //Wait for ther ADC circuit stable
                 ; 0000 004E delay_ms(10);
                 ; 0000 004F //Start ADC conversion
                 ; 0000 0050 ADCSRA |= 0b01000000;
0000f8 91e0 007a 	LDS  R30,122
0000fa 64e0      	ORI  R30,0x40
0000fb 93e0 007a 	STS  122,R30
                 ; 0000 0051 //Wait for the converson complete
                 ; 0000 0052 while((ADCSRA & 0b00010000) == 0);
                 _0x17:
0000fd 91e0 007a 	LDS  R30,122
0000ff 71e0      	ANDI R30,LOW(0x10)
000100 f3e1      	BREQ _0x17
                 ; 0000 0053 ADC_val = ADCW;
000101 91e0 0078 	LDS  R30,120
000103 91f0 0079 	LDS  R31,120+1
000105 2766      	CLR  R22
000106 2777      	CLR  R23
000107 93e0 032e 	STS  _ADC_val,R30
000109 93f0 032f 	STS  _ADC_val+1,R31
00010b 9360 0330 	STS  _ADC_val+2,R22
00010d 9370 0331 	STS  _ADC_val+3,R23
                 ; 0000 0054 //Clear the ADC conversion complete flag
                 ; 0000 0055 ADCSRA |= 0b00010000;
00010f 91e0 007a 	LDS  R30,122
000111 61e0      	ORI  R30,0x10
000112 93e0 007a 	STS  122,R30
                 ; 0000 0056 
                 ; 0000 0057 putstring("Gia tri ADC: ");
                +
000114 e0a0     +LDI R26 , LOW ( _0x1A + ( 0 ) )
000115 e0b3     +LDI R27 , HIGH ( _0x1A + ( 0 ) )
                 	__POINTW2MN _0x1A,0
000116 df79      	RCALL _putstring
                 ; 0000 0058 put_int(ADC_val);
000117 91a0 032e 	LDS  R26,_ADC_val
000119 91b0 032f 	LDS  R27,_ADC_val+1
00011b df89      	RCALL _put_int
                 ; 0000 0059 putstring(" ");
                +
00011c e0ae     +LDI R26 , LOW ( _0x1A + ( 14 ) )
00011d e0b3     +LDI R27 , HIGH ( _0x1A + ( 14 ) )
                 	__POINTW2MN _0x1A,14
00011e df71      	RCALL _putstring
                 ; 0000 005A 
                 ; 0000 005B if(ADC_val >= 800){
00011f 91a0 032e 	LDS  R26,_ADC_val
000121 91b0 032f 	LDS  R27,_ADC_val+1
000123 9180 0330 	LDS  R24,_ADC_val+2
000125 9190 0331 	LDS  R25,_ADC_val+3
                +
000127 32a0     +CPI R26 , LOW ( 0x320 )
000128 e0e3     +LDI R30 , HIGH ( 0x320 )
000129 07be     +CPC R27 , R30
00012a e0e0     +LDI R30 , BYTE3 ( 0x320 )
00012b 078e     +CPC R24 , R30
00012c e0e0     +LDI R30 , BYTE4 ( 0x320 )
00012d 079e     +CPC R25 , R30
                 	__CPD2N 0x320
00012e f060      	BRLO _0x1B
                 ; 0000 005C PORTD.6 = !PORTD.6;
00012f 9b5e      	SBIS 0xB,6
000130 c002      	RJMP _0x1C
000131 985e      	CBI  0xB,6
000132 c001      	RJMP _0x1D
                 _0x1C:
000133 9a5e      	SBI  0xB,6
                 _0x1D:
                 ; 0000 005D delay_ms(250);
000134 efaa      	LDI  R26,LOW(250)
000135 e0b0      	LDI  R27,0
000136 d058      	RCALL _delay_ms
                 ; 0000 005E putstring(" System alarm. ");
                +
000137 e1a0     +LDI R26 , LOW ( _0x1A + ( 16 ) )
000138 e0b3     +LDI R27 , HIGH ( _0x1A + ( 16 ) )
                 	__POINTW2MN _0x1A,16
000139 df56      	RCALL _putstring
                 ; 0000 005F }else{
00013a c004      	RJMP _0x1E
                 _0x1B:
                 ; 0000 0060 putstring(" Alarm Over. ");
                +
00013b e2a0     +LDI R26 , LOW ( _0x1A + ( 32 ) )
00013c e0b3     +LDI R27 , HIGH ( _0x1A + ( 32 ) )
                 	__POINTW2MN _0x1A,32
00013d df52      	RCALL _putstring
                 ; 0000 0061 PORTD.6 = 0;
00013e 985e      	CBI  0xB,6
                 ; 0000 0062 }
                 _0x1E:
                 ; 0000 0063 
                 ; 0000 0064 }
00013f cfb4      	RJMP _0x14
                 ; 0000 0065 }
                 _0x21:
000140 cfff      	RJMP _0x21
                 ; .FEND
                 
                 	.DSEG
                 _0x1A:
000300           	.BYTE 0x2E
                 
                 	.DSEG
                 _ADC_val:
00032e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000141 91e0 007e 	LDS  R30,126
000143 60ea      	ORI  R30,LOW(0xA)
000144 93e0 007e 	STS  126,R30
000146 e0aa      	LDI  R26,LOW(10)
000147 e0b0      	LDI  R27,0
000148 c046      	RJMP _delay_ms
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000149 935a      	ST   -Y,R21
                 __SAVELOCR5:
00014a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00014b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00014c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00014d 931a      	ST   -Y,R17
00014e 930a      	ST   -Y,R16
00014f 9508      	RET
                 
                 __LOADLOCR6:
000150 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000151 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000152 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000153 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000154 8119      	LDD  R17,Y+1
000155 8108      	LD   R16,Y
000156 9508      	RET
                 
                 __ANEGW1:
000157 95f1      	NEG  R31
000158 95e1      	NEG  R30
000159 40f0      	SBCI R31,0
00015a 9508      	RET
                 
                 __DIVW21U:
00015b 2400      	CLR  R0
00015c 2411      	CLR  R1
00015d e190      	LDI  R25,16
                 __DIVW21U1:
00015e 0faa      	LSL  R26
00015f 1fbb      	ROL  R27
000160 1c00      	ROL  R0
000161 1c11      	ROL  R1
000162 1a0e      	SUB  R0,R30
000163 0a1f      	SBC  R1,R31
000164 f418      	BRCC __DIVW21U2
000165 0e0e      	ADD  R0,R30
000166 1e1f      	ADC  R1,R31
000167 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000168 60a1      	SBR  R26,1
                 __DIVW21U3:
000169 959a      	DEC  R25
00016a f799      	BRNE __DIVW21U1
00016b 01fd      	MOVW R30,R26
00016c 01d0      	MOVW R26,R0
00016d 9508      	RET
                 
                 __DIVW21:
00016e d012      	RCALL __CHKSIGNW
00016f dfeb      	RCALL __DIVW21U
000170 f40e      	BRTC __DIVW211
000171 dfe5      	RCALL __ANEGW1
                 __DIVW211:
000172 9508      	RET
                 
                 __MODW21:
000173 94e8      	CLT
000174 ffb7      	SBRS R27,7
000175 c004      	RJMP __MODW211
000176 95b1      	NEG  R27
000177 95a1      	NEG  R26
000178 40b0      	SBCI R27,0
000179 9468      	SET
                 __MODW211:
00017a fdf7      	SBRC R31,7
00017b dfdb      	RCALL __ANEGW1
00017c dfde      	RCALL __DIVW21U
00017d 01fd      	MOVW R30,R26
00017e f40e      	BRTC __MODW212
00017f dfd7      	RCALL __ANEGW1
                 __MODW212:
000180 9508      	RET
                 
                 __CHKSIGNW:
000181 94e8      	CLT
000182 fff7      	SBRS R31,7
000183 c002      	RJMP __CHKSW1
000184 dfd2      	RCALL __ANEGW1
000185 9468      	SET
                 __CHKSW1:
000186 ffb7      	SBRS R27,7
000187 c006      	RJMP __CHKSW2
000188 95b1      	NEG  R27
000189 95a1      	NEG  R26
00018a 40b0      	SBCI R27,0
00018b f800      	BLD  R0,0
00018c 9403      	INC  R0
00018d fa00      	BST  R0,0
                 __CHKSW2:
00018e 9508      	RET
                 
                 _delay_ms:
00018f 9610      	adiw r26,0
000190 f039      	breq __delay_ms1
                 __delay_ms0:
000191 95a8      	wdr
                +
000192 ed80     +LDI R24 , LOW ( 0x7D0 )
000193 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000194 9701     +SBIW R24 , 1
000195 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000196 9711      	sbiw r26,1
000197 f7c9      	brne __delay_ms0
                 __delay_ms1:
000198 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  17 r1 :   5 r2 :   0 r3 :   2 r4 :   1 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  12 r17:  11 r18:   6 r19:   4 r20:   7 r21:   4 r22:   6 r23:   2 
r24:  11 r25:   7 r26:  40 r27:  22 r28:   5 r29:   1 r30:  69 r31:  20 
x  :   8 y  :  22 z  :   7 
Registers used: 23 out of 35 (65.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   3 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   5 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :   8 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   4 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   4 cpi   :   3 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   1 jmp   :  27 ld    :   8 ldd   :   7 ldi   :  46 
lds   :  13 lpm   :   7 lsl   :   1 lsr   :   0 mov   :   5 movw  :  19 
mul   :   0 muls  :   0 mulsu :   0 neg   :   6 nop   :   0 or    :   1 
ori   :   3 out   :   6 pop   :   0 push  :   0 rcall :  22 ret   :  11 
reti  :   0 rjmp  :  13 rol   :   3 ror   :   0 sbc   :   1 sbci  :   6 
sbi   :   3 sbic  :   0 sbis  :   1 sbiw  :   7 sbr   :   1 sbrc  :   2 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   1 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  15 std   :   0 sts   :  15 sub   :   1 subi  :   4 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000332    748     70    818   32768   2.5%
[.dseg] 0x000100 0x000332      0     50     50    2048   2.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
